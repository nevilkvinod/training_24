
twelve.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  00000352  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002fe  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000352  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000384  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002526  00000000  00000000  00000444  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000227a  00000000  00000000  0000296a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000312  00000000  00000000  00004be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  00004ef8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000109b  00000000  00000000  00004fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000011d  00000000  00000000  00006063  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00006180  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  68:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  6c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  70:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  74:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  78:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  7c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  80:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  84:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  88:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  8c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	0e 94 91 00 	call	0x122	; 0x122 <main>
  a0:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <binary>:
 *
 * Created: 31-07-2024 09:51:12
 *  Author: Siyan Ananth A
 */ 

int binary(int a,int *arr){
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
  b0:	26 97       	sbiw	r28, 0x06	; 6
  b2:	cd bf       	out	0x3d, r28	; 61
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	8b 83       	std	Y+3, r24	; 0x03
  b8:	9c 83       	std	Y+4, r25	; 0x04
  ba:	6d 83       	std	Y+5, r22	; 0x05
  bc:	7e 83       	std	Y+6, r23	; 0x06
	int i=0;
  be:	19 82       	std	Y+1, r1	; 0x01
  c0:	1a 82       	std	Y+2, r1	; 0x02
	while(a>0){
  c2:	23 c0       	rjmp	.+70     	; 0x10a <__EEPROM_REGION_LENGTH__+0xa>
		arr[i]=a%2;
  c4:	89 81       	ldd	r24, Y+1	; 0x01
  c6:	9a 81       	ldd	r25, Y+2	; 0x02
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	2d 81       	ldd	r18, Y+5	; 0x05
  ce:	3e 81       	ldd	r19, Y+6	; 0x06
  d0:	28 0f       	add	r18, r24
  d2:	39 1f       	adc	r19, r25
  d4:	8b 81       	ldd	r24, Y+3	; 0x03
  d6:	9c 81       	ldd	r25, Y+4	; 0x04
  d8:	81 70       	andi	r24, 0x01	; 1
  da:	90 78       	andi	r25, 0x80	; 128
  dc:	99 23       	and	r25, r25
  de:	24 f4       	brge	.+8      	; 0xe8 <binary+0x40>
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	8e 6f       	ori	r24, 0xFE	; 254
  e4:	9f 6f       	ori	r25, 0xFF	; 255
  e6:	01 96       	adiw	r24, 0x01	; 1
  e8:	f9 01       	movw	r30, r18
  ea:	80 83       	st	Z, r24
  ec:	91 83       	std	Z+1, r25	; 0x01
		a=a/2;
  ee:	8b 81       	ldd	r24, Y+3	; 0x03
  f0:	9c 81       	ldd	r25, Y+4	; 0x04
  f2:	99 23       	and	r25, r25
  f4:	0c f4       	brge	.+2      	; 0xf8 <binary+0x50>
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	95 95       	asr	r25
  fa:	87 95       	ror	r24
  fc:	8b 83       	std	Y+3, r24	; 0x03
  fe:	9c 83       	std	Y+4, r25	; 0x04
		i++;
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	9a 81       	ldd	r25, Y+2	; 0x02
 104:	01 96       	adiw	r24, 0x01	; 1
 106:	89 83       	std	Y+1, r24	; 0x01
 108:	9a 83       	std	Y+2, r25	; 0x02
 *  Author: Siyan Ananth A
 */ 

int binary(int a,int *arr){
	int i=0;
	while(a>0){
 10a:	8b 81       	ldd	r24, Y+3	; 0x03
 10c:	9c 81       	ldd	r25, Y+4	; 0x04
 10e:	18 16       	cp	r1, r24
 110:	19 06       	cpc	r1, r25
 112:	c4 f2       	brlt	.-80     	; 0xc4 <binary+0x1c>
		arr[i]=a%2;
		a=a/2;
		i++;
	}
 114:	00 00       	nop
 116:	26 96       	adiw	r28, 0x06	; 6
 118:	cd bf       	out	0x3d, r28	; 61
 11a:	de bf       	out	0x3e, r29	; 62
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <main>:

binary(int , int);
number(int ,int,int);

int main(void)
{
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	cd b7       	in	r28, 0x3d	; 61
 128:	de b7       	in	r29, 0x3e	; 62
 12a:	c8 54       	subi	r28, 0x48	; 72
 12c:	d1 09       	sbc	r29, r1
 12e:	cd bf       	out	0x3d, r28	; 61
 130:	de bf       	out	0x3e, r29	; 62
    int a=170,b=3,c=4;
 132:	8a ea       	ldi	r24, 0xAA	; 170
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	89 83       	std	Y+1, r24	; 0x01
 138:	9a 83       	std	Y+2, r25	; 0x02
 13a:	83 e0       	ldi	r24, 0x03	; 3
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	8b 83       	std	Y+3, r24	; 0x03
 140:	9c 83       	std	Y+4, r25	; 0x04
 142:	84 e0       	ldi	r24, 0x04	; 4
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	8d 83       	std	Y+5, r24	; 0x05
 148:	9e 83       	std	Y+6, r25	; 0x06
	int arr[32];
	
	binary(a,arr);
 14a:	9e 01       	movw	r18, r28
 14c:	27 5f       	subi	r18, 0xF7	; 247
 14e:	3f 4f       	sbci	r19, 0xFF	; 255
 150:	89 81       	ldd	r24, Y+1	; 0x01
 152:	9a 81       	ldd	r25, Y+2	; 0x02
 154:	b9 01       	movw	r22, r18
 156:	0e 94 54 00 	call	0xa8	; 0xa8 <binary>
	
	int num = number(b,c,arr);
 15a:	ae 01       	movw	r20, r28
 15c:	47 5f       	subi	r20, 0xF7	; 247
 15e:	5f 4f       	sbci	r21, 0xFF	; 255
 160:	2d 81       	ldd	r18, Y+5	; 0x05
 162:	3e 81       	ldd	r19, Y+6	; 0x06
 164:	8b 81       	ldd	r24, Y+3	; 0x03
 166:	9c 81       	ldd	r25, Y+4	; 0x04
 168:	b9 01       	movw	r22, r18
 16a:	0e 94 c2 00 	call	0x184	; 0x184 <number>
 16e:	8f 83       	std	Y+7, r24	; 0x07
 170:	98 87       	std	Y+8, r25	; 0x08
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	90 e0       	ldi	r25, 0x00	; 0

}
 176:	c8 5b       	subi	r28, 0xB8	; 184
 178:	df 4f       	sbci	r29, 0xFF	; 255
 17a:	cd bf       	out	0x3d, r28	; 61
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	df 91       	pop	r29
 180:	cf 91       	pop	r28
 182:	08 95       	ret

00000184 <number>:
 *  Author: Siyan Ananth A
 */ 

long int power(int,int);

int number(int b,int c,int *arr){
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	cd b7       	in	r28, 0x3d	; 61
 18a:	de b7       	in	r29, 0x3e	; 62
 18c:	2e 97       	sbiw	r28, 0x0e	; 14
 18e:	cd bf       	out	0x3d, r28	; 61
 190:	de bf       	out	0x3e, r29	; 62
 192:	89 87       	std	Y+9, r24	; 0x09
 194:	9a 87       	std	Y+10, r25	; 0x0a
 196:	6b 87       	std	Y+11, r22	; 0x0b
 198:	7c 87       	std	Y+12, r23	; 0x0c
 19a:	4d 87       	std	Y+13, r20	; 0x0d
 19c:	5e 87       	std	Y+14, r21	; 0x0e
	int count=0;
 19e:	19 82       	std	Y+1, r1	; 0x01
 1a0:	1a 82       	std	Y+2, r1	; 0x02
	for(int i=b;i>=0;i--){
 1a2:	89 85       	ldd	r24, Y+9	; 0x09
 1a4:	9a 85       	ldd	r25, Y+10	; 0x0a
 1a6:	8b 83       	std	Y+3, r24	; 0x03
 1a8:	9c 83       	std	Y+4, r25	; 0x04
 1aa:	31 c0       	rjmp	.+98     	; 0x20e <number+0x8a>
		c--;
 1ac:	8b 85       	ldd	r24, Y+11	; 0x0b
 1ae:	9c 85       	ldd	r25, Y+12	; 0x0c
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	8b 87       	std	Y+11, r24	; 0x0b
 1b4:	9c 87       	std	Y+12, r25	; 0x0c
		if(arr[i]==1){
 1b6:	8b 81       	ldd	r24, Y+3	; 0x03
 1b8:	9c 81       	ldd	r25, Y+4	; 0x04
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	2d 85       	ldd	r18, Y+13	; 0x0d
 1c0:	3e 85       	ldd	r19, Y+14	; 0x0e
 1c2:	82 0f       	add	r24, r18
 1c4:	93 1f       	adc	r25, r19
 1c6:	fc 01       	movw	r30, r24
 1c8:	80 81       	ld	r24, Z
 1ca:	91 81       	ldd	r25, Z+1	; 0x01
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	a9 f4       	brne	.+42     	; 0x1fa <number+0x76>
			long int a=power(2,c);
 1d0:	8b 85       	ldd	r24, Y+11	; 0x0b
 1d2:	9c 85       	ldd	r25, Y+12	; 0x0c
 1d4:	bc 01       	movw	r22, r24
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	0e 94 15 01 	call	0x22a	; 0x22a <power>
 1de:	dc 01       	movw	r26, r24
 1e0:	cb 01       	movw	r24, r22
 1e2:	8d 83       	std	Y+5, r24	; 0x05
 1e4:	9e 83       	std	Y+6, r25	; 0x06
 1e6:	af 83       	std	Y+7, r26	; 0x07
 1e8:	b8 87       	std	Y+8, r27	; 0x08
			count+=a;
 1ea:	2d 81       	ldd	r18, Y+5	; 0x05
 1ec:	3e 81       	ldd	r19, Y+6	; 0x06
 1ee:	89 81       	ldd	r24, Y+1	; 0x01
 1f0:	9a 81       	ldd	r25, Y+2	; 0x02
 1f2:	82 0f       	add	r24, r18
 1f4:	93 1f       	adc	r25, r19
 1f6:	89 83       	std	Y+1, r24	; 0x01
 1f8:	9a 83       	std	Y+2, r25	; 0x02
		}
		
		if(c<=0){
 1fa:	8b 85       	ldd	r24, Y+11	; 0x0b
 1fc:	9c 85       	ldd	r25, Y+12	; 0x0c
 1fe:	18 16       	cp	r1, r24
 200:	19 06       	cpc	r1, r25
 202:	54 f4       	brge	.+20     	; 0x218 <number+0x94>

long int power(int,int);

int number(int b,int c,int *arr){
	int count=0;
	for(int i=b;i>=0;i--){
 204:	8b 81       	ldd	r24, Y+3	; 0x03
 206:	9c 81       	ldd	r25, Y+4	; 0x04
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	8b 83       	std	Y+3, r24	; 0x03
 20c:	9c 83       	std	Y+4, r25	; 0x04
 20e:	8b 81       	ldd	r24, Y+3	; 0x03
 210:	9c 81       	ldd	r25, Y+4	; 0x04
 212:	99 23       	and	r25, r25
 214:	5c f6       	brge	.-106    	; 0x1ac <number+0x28>
 216:	01 c0       	rjmp	.+2      	; 0x21a <number+0x96>
			long int a=power(2,c);
			count+=a;
		}
		
		if(c<=0){
			break;
 218:	00 00       	nop
		}
	}
	
	return count;
 21a:	89 81       	ldd	r24, Y+1	; 0x01
 21c:	9a 81       	ldd	r25, Y+2	; 0x02
 21e:	2e 96       	adiw	r28, 0x0e	; 14
 220:	cd bf       	out	0x3d, r28	; 61
 222:	de bf       	out	0x3e, r29	; 62
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	08 95       	ret

0000022a <power>:
 *
 * Created: 31-07-2024 10:01:54
 *  Author: Siyan Ananth A
 */ 

long int power(int a,int b){
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	cd b7       	in	r28, 0x3d	; 61
 230:	de b7       	in	r29, 0x3e	; 62
 232:	28 97       	sbiw	r28, 0x08	; 8
 234:	cd bf       	out	0x3d, r28	; 61
 236:	de bf       	out	0x3e, r29	; 62
 238:	8d 83       	std	Y+5, r24	; 0x05
 23a:	9e 83       	std	Y+6, r25	; 0x06
 23c:	6f 83       	std	Y+7, r22	; 0x07
 23e:	78 87       	std	Y+8, r23	; 0x08
	long int ans=1;
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	a0 e0       	ldi	r26, 0x00	; 0
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	89 83       	std	Y+1, r24	; 0x01
 24a:	9a 83       	std	Y+2, r25	; 0x02
 24c:	ab 83       	std	Y+3, r26	; 0x03
 24e:	bc 83       	std	Y+4, r27	; 0x04
	while(b>0){
 250:	19 c0       	rjmp	.+50     	; 0x284 <power+0x5a>
		ans*=a;
 252:	8d 81       	ldd	r24, Y+5	; 0x05
 254:	9e 81       	ldd	r25, Y+6	; 0x06
 256:	09 2e       	mov	r0, r25
 258:	00 0c       	add	r0, r0
 25a:	aa 0b       	sbc	r26, r26
 25c:	bb 0b       	sbc	r27, r27
 25e:	29 81       	ldd	r18, Y+1	; 0x01
 260:	3a 81       	ldd	r19, Y+2	; 0x02
 262:	4b 81       	ldd	r20, Y+3	; 0x03
 264:	5c 81       	ldd	r21, Y+4	; 0x04
 266:	bc 01       	movw	r22, r24
 268:	cd 01       	movw	r24, r26
 26a:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__mulsi3>
 26e:	dc 01       	movw	r26, r24
 270:	cb 01       	movw	r24, r22
 272:	89 83       	std	Y+1, r24	; 0x01
 274:	9a 83       	std	Y+2, r25	; 0x02
 276:	ab 83       	std	Y+3, r26	; 0x03
 278:	bc 83       	std	Y+4, r27	; 0x04
		b--;
 27a:	8f 81       	ldd	r24, Y+7	; 0x07
 27c:	98 85       	ldd	r25, Y+8	; 0x08
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	8f 83       	std	Y+7, r24	; 0x07
 282:	98 87       	std	Y+8, r25	; 0x08
 *  Author: Siyan Ananth A
 */ 

long int power(int a,int b){
	long int ans=1;
	while(b>0){
 284:	8f 81       	ldd	r24, Y+7	; 0x07
 286:	98 85       	ldd	r25, Y+8	; 0x08
 288:	18 16       	cp	r1, r24
 28a:	19 06       	cpc	r1, r25
 28c:	14 f3       	brlt	.-60     	; 0x252 <power+0x28>
		ans*=a;
		b--;
	}
	return ans;
 28e:	89 81       	ldd	r24, Y+1	; 0x01
 290:	9a 81       	ldd	r25, Y+2	; 0x02
 292:	ab 81       	ldd	r26, Y+3	; 0x03
 294:	bc 81       	ldd	r27, Y+4	; 0x04
 296:	bc 01       	movw	r22, r24
 298:	cd 01       	movw	r24, r26
 29a:	28 96       	adiw	r28, 0x08	; 8
 29c:	cd bf       	out	0x3d, r28	; 61
 29e:	de bf       	out	0x3e, r29	; 62
 2a0:	df 91       	pop	r29
 2a2:	cf 91       	pop	r28
 2a4:	08 95       	ret

000002a6 <__mulsi3>:
 2a6:	db 01       	movw	r26, r22
 2a8:	8f 93       	push	r24
 2aa:	9f 93       	push	r25
 2ac:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__muluhisi3>
 2b0:	bf 91       	pop	r27
 2b2:	af 91       	pop	r26
 2b4:	a2 9f       	mul	r26, r18
 2b6:	80 0d       	add	r24, r0
 2b8:	91 1d       	adc	r25, r1
 2ba:	a3 9f       	mul	r26, r19
 2bc:	90 0d       	add	r25, r0
 2be:	b2 9f       	mul	r27, r18
 2c0:	90 0d       	add	r25, r0
 2c2:	11 24       	eor	r1, r1
 2c4:	08 95       	ret

000002c6 <__muluhisi3>:
 2c6:	0e 94 6e 01 	call	0x2dc	; 0x2dc <__umulhisi3>
 2ca:	a5 9f       	mul	r26, r21
 2cc:	90 0d       	add	r25, r0
 2ce:	b4 9f       	mul	r27, r20
 2d0:	90 0d       	add	r25, r0
 2d2:	a4 9f       	mul	r26, r20
 2d4:	80 0d       	add	r24, r0
 2d6:	91 1d       	adc	r25, r1
 2d8:	11 24       	eor	r1, r1
 2da:	08 95       	ret

000002dc <__umulhisi3>:
 2dc:	a2 9f       	mul	r26, r18
 2de:	b0 01       	movw	r22, r0
 2e0:	b3 9f       	mul	r27, r19
 2e2:	c0 01       	movw	r24, r0
 2e4:	a3 9f       	mul	r26, r19
 2e6:	70 0d       	add	r23, r0
 2e8:	81 1d       	adc	r24, r1
 2ea:	11 24       	eor	r1, r1
 2ec:	91 1d       	adc	r25, r1
 2ee:	b2 9f       	mul	r27, r18
 2f0:	70 0d       	add	r23, r0
 2f2:	81 1d       	adc	r24, r1
 2f4:	11 24       	eor	r1, r1
 2f6:	91 1d       	adc	r25, r1
 2f8:	08 95       	ret

000002fa <_exit>:
 2fa:	f8 94       	cli

000002fc <__stop_program>:
 2fc:	ff cf       	rjmp	.-2      	; 0x2fc <__stop_program>
