
thirteen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  0000020f  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000196  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000005  00004196  00000196  0000020a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .comment      00000030  00000000  00000000  0000020f  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000240  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023e4  00000000  00000000  000002c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000021b2  00000000  00000000  000026a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000256  00000000  00000000  00004856  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00004aac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000108e  00000000  00000000  00004b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000008e  00000000  00000000  00005ba2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00005c30  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  68:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  6c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  70:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  74:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  78:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  7c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  80:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  84:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  88:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  8c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	0e 94 54 00 	call	0xa8	; 0xa8 <main>
  a0:	0c 94 c9 00 	jmp	0x192	; 0x192 <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <main>:

#include <avr/io.h>

int vowel (char);

int main(void){
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
  b0:	27 97       	sbiw	r28, 0x07	; 7
  b2:	cd bf       	out	0x3d, r28	; 61
  b4:	de bf       	out	0x3e, r29	; 62
	char arr[]={'a','e','i','o','e'};
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	e6 e9       	ldi	r30, 0x96	; 150
  ba:	f1 e4       	ldi	r31, 0x41	; 65
  bc:	de 01       	movw	r26, r28
  be:	13 96       	adiw	r26, 0x03	; 3
  c0:	01 90       	ld	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	8a 95       	dec	r24
  c6:	e1 f7       	brne	.-8      	; 0xc0 <main+0x18>
	int a=vowel(arr);	
  c8:	ce 01       	movw	r24, r28
  ca:	03 96       	adiw	r24, 0x03	; 3
  cc:	0e 94 72 00 	call	0xe4	; 0xe4 <vowel>
  d0:	89 83       	std	Y+1, r24	; 0x01
  d2:	9a 83       	std	Y+2, r25	; 0x02
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
}
  d8:	27 96       	adiw	r28, 0x07	; 7
  da:	cd bf       	out	0x3d, r28	; 61
  dc:	de bf       	out	0x3e, r29	; 62
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <vowel>:
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	cd b7       	in	r28, 0x3d	; 61
  ea:	de b7       	in	r29, 0x3e	; 62
  ec:	26 97       	sbiw	r28, 0x06	; 6
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	8d 83       	std	Y+5, r24	; 0x05
  f4:	9e 83       	std	Y+6, r25	; 0x06
  f6:	19 82       	std	Y+1, r1	; 0x01
  f8:	1a 82       	std	Y+2, r1	; 0x02
  fa:	1b 82       	std	Y+3, r1	; 0x03
  fc:	1c 82       	std	Y+4, r1	; 0x04
  fe:	3c c0       	rjmp	.+120    	; 0x178 <__EEPROM_REGION_LENGTH__+0x78>
 100:	8b 81       	ldd	r24, Y+3	; 0x03
 102:	9c 81       	ldd	r25, Y+4	; 0x04
 104:	2d 81       	ldd	r18, Y+5	; 0x05
 106:	3e 81       	ldd	r19, Y+6	; 0x06
 108:	82 0f       	add	r24, r18
 10a:	93 1f       	adc	r25, r19
 10c:	fc 01       	movw	r30, r24
 10e:	80 81       	ld	r24, Z
 110:	81 36       	cpi	r24, 0x61	; 97
 112:	41 f1       	breq	.+80     	; 0x164 <__EEPROM_REGION_LENGTH__+0x64>
 114:	8b 81       	ldd	r24, Y+3	; 0x03
 116:	9c 81       	ldd	r25, Y+4	; 0x04
 118:	2d 81       	ldd	r18, Y+5	; 0x05
 11a:	3e 81       	ldd	r19, Y+6	; 0x06
 11c:	82 0f       	add	r24, r18
 11e:	93 1f       	adc	r25, r19
 120:	fc 01       	movw	r30, r24
 122:	80 81       	ld	r24, Z
 124:	85 36       	cpi	r24, 0x65	; 101
 126:	f1 f0       	breq	.+60     	; 0x164 <__EEPROM_REGION_LENGTH__+0x64>
 128:	8b 81       	ldd	r24, Y+3	; 0x03
 12a:	9c 81       	ldd	r25, Y+4	; 0x04
 12c:	2d 81       	ldd	r18, Y+5	; 0x05
 12e:	3e 81       	ldd	r19, Y+6	; 0x06
 130:	82 0f       	add	r24, r18
 132:	93 1f       	adc	r25, r19
 134:	fc 01       	movw	r30, r24
 136:	80 81       	ld	r24, Z
 138:	89 36       	cpi	r24, 0x69	; 105
 13a:	a1 f0       	breq	.+40     	; 0x164 <__EEPROM_REGION_LENGTH__+0x64>
 13c:	8b 81       	ldd	r24, Y+3	; 0x03
 13e:	9c 81       	ldd	r25, Y+4	; 0x04
 140:	2d 81       	ldd	r18, Y+5	; 0x05
 142:	3e 81       	ldd	r19, Y+6	; 0x06
 144:	82 0f       	add	r24, r18
 146:	93 1f       	adc	r25, r19
 148:	fc 01       	movw	r30, r24
 14a:	80 81       	ld	r24, Z
 14c:	8f 36       	cpi	r24, 0x6F	; 111
 14e:	51 f0       	breq	.+20     	; 0x164 <__EEPROM_REGION_LENGTH__+0x64>
 150:	8b 81       	ldd	r24, Y+3	; 0x03
 152:	9c 81       	ldd	r25, Y+4	; 0x04
 154:	2d 81       	ldd	r18, Y+5	; 0x05
 156:	3e 81       	ldd	r19, Y+6	; 0x06
 158:	82 0f       	add	r24, r18
 15a:	93 1f       	adc	r25, r19
 15c:	fc 01       	movw	r30, r24
 15e:	80 81       	ld	r24, Z
 160:	85 37       	cpi	r24, 0x75	; 117
 162:	29 f4       	brne	.+10     	; 0x16e <__EEPROM_REGION_LENGTH__+0x6e>
 164:	89 81       	ldd	r24, Y+1	; 0x01
 166:	9a 81       	ldd	r25, Y+2	; 0x02
 168:	01 96       	adiw	r24, 0x01	; 1
 16a:	89 83       	std	Y+1, r24	; 0x01
 16c:	9a 83       	std	Y+2, r25	; 0x02
 16e:	8b 81       	ldd	r24, Y+3	; 0x03
 170:	9c 81       	ldd	r25, Y+4	; 0x04
 172:	01 96       	adiw	r24, 0x01	; 1
 174:	8b 83       	std	Y+3, r24	; 0x03
 176:	9c 83       	std	Y+4, r25	; 0x04
 178:	8b 81       	ldd	r24, Y+3	; 0x03
 17a:	9c 81       	ldd	r25, Y+4	; 0x04
 17c:	05 97       	sbiw	r24, 0x05	; 5
 17e:	0c f4       	brge	.+2      	; 0x182 <__EEPROM_REGION_LENGTH__+0x82>
 180:	bf cf       	rjmp	.-130    	; 0x100 <__EEPROM_REGION_LENGTH__>
 182:	89 81       	ldd	r24, Y+1	; 0x01
 184:	9a 81       	ldd	r25, Y+2	; 0x02
 186:	26 96       	adiw	r28, 0x06	; 6
 188:	cd bf       	out	0x3d, r28	; 61
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	08 95       	ret

00000192 <_exit>:
 192:	f8 94       	cli

00000194 <__stop_program>:
 194:	ff cf       	rjmp	.-2      	; 0x194 <__stop_program>
