
eleventh.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00802800  000007da  0000084e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007da  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000852  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000884  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002556  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000022ab  00000000  00000000  00002e9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ce  00000000  00000000  00005145  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f8  00000000  00000000  00005414  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000109b  00000000  00000000  0000550c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000184  00000000  00000000  000065a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000672b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
  9c:	18 e2       	ldi	r17, 0x28	; 40
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b8 e2       	ldi	r27, 0x28	; 40
  a2:	ea ed       	ldi	r30, 0xDA	; 218
  a4:	f7 e0       	ldi	r31, 0x07	; 7
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
  a8:	05 90       	lpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
  b2:	28 e2       	ldi	r18, 0x28	; 40
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b8 e2       	ldi	r27, 0x28	; 40
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 30       	cpi	r26, 0x04	; 4
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 19 01 	call	0x232	; 0x232 <main>
  c6:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <adc>:
 */ 
#include <math.h>
float vref;
long int power (int , int);

int adc(float analog_voltage,int adc_resolution){
  ce:	cf 92       	push	r12
  d0:	df 92       	push	r13
  d2:	ef 92       	push	r14
  d4:	ff 92       	push	r15
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
  da:	cd b7       	in	r28, 0x3d	; 61
  dc:	de b7       	in	r29, 0x3e	; 62
  de:	2c 97       	sbiw	r28, 0x0c	; 12
  e0:	cd bf       	out	0x3d, r28	; 61
  e2:	de bf       	out	0x3e, r29	; 62
  e4:	6f 83       	std	Y+7, r22	; 0x07
  e6:	78 87       	std	Y+8, r23	; 0x08
  e8:	89 87       	std	Y+9, r24	; 0x09
  ea:	9a 87       	std	Y+10, r25	; 0x0a
  ec:	4b 87       	std	Y+11, r20	; 0x0b
  ee:	5c 87       	std	Y+12, r21	; 0x0c
	int analog_digital;
	long int a=power(2,adc_resolution)-1;
  f0:	8b 85       	ldd	r24, Y+11	; 0x0b
  f2:	9c 85       	ldd	r25, Y+12	; 0x0c
  f4:	bc 01       	movw	r22, r24
  f6:	82 e0       	ldi	r24, 0x02	; 2
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 72 01 	call	0x2e4	; 0x2e4 <power>
  fe:	dc 01       	movw	r26, r24
 100:	cb 01       	movw	r24, r22
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	a1 09       	sbc	r26, r1
 106:	b1 09       	sbc	r27, r1
 108:	89 83       	std	Y+1, r24	; 0x01
 10a:	9a 83       	std	Y+2, r25	; 0x02
 10c:	ab 83       	std	Y+3, r26	; 0x03
 10e:	bc 83       	std	Y+4, r27	; 0x04
	analog_digital = (analog_voltage/vref)*a;
 110:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 114:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 118:	a0 91 02 28 	lds	r26, 0x2802	; 0x802802 <__DATA_REGION_ORIGIN__+0x2>
 11c:	b0 91 03 28 	lds	r27, 0x2803	; 0x802803 <__DATA_REGION_ORIGIN__+0x3>
 120:	9c 01       	movw	r18, r24
 122:	ad 01       	movw	r20, r26
 124:	6f 81       	ldd	r22, Y+7	; 0x07
 126:	78 85       	ldd	r23, Y+8	; 0x08
 128:	89 85       	ldd	r24, Y+9	; 0x09
 12a:	9a 85       	ldd	r25, Y+10	; 0x0a
 12c:	0e 94 1e 02 	call	0x43c	; 0x43c <__divsf3>
 130:	dc 01       	movw	r26, r24
 132:	cb 01       	movw	r24, r22
 134:	6c 01       	movw	r12, r24
 136:	7d 01       	movw	r14, r26
 138:	69 81       	ldd	r22, Y+1	; 0x01
 13a:	7a 81       	ldd	r23, Y+2	; 0x02
 13c:	8b 81       	ldd	r24, Y+3	; 0x03
 13e:	9c 81       	ldd	r25, Y+4	; 0x04
 140:	0e 94 c8 02 	call	0x590	; 0x590 <__floatsisf>
 144:	dc 01       	movw	r26, r24
 146:	cb 01       	movw	r24, r22
 148:	9c 01       	movw	r18, r24
 14a:	ad 01       	movw	r20, r26
 14c:	c7 01       	movw	r24, r14
 14e:	b6 01       	movw	r22, r12
 150:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__mulsf3>
 154:	dc 01       	movw	r26, r24
 156:	cb 01       	movw	r24, r22
 158:	bc 01       	movw	r22, r24
 15a:	cd 01       	movw	r24, r26
 15c:	0e 94 90 02 	call	0x520	; 0x520 <__fixsfsi>
 160:	dc 01       	movw	r26, r24
 162:	cb 01       	movw	r24, r22
 164:	8d 83       	std	Y+5, r24	; 0x05
 166:	9e 83       	std	Y+6, r25	; 0x06
	return analog_digital;
 168:	8d 81       	ldd	r24, Y+5	; 0x05
 16a:	9e 81       	ldd	r25, Y+6	; 0x06
 16c:	2c 96       	adiw	r28, 0x0c	; 12
 16e:	cd bf       	out	0x3d, r28	; 61
 170:	de bf       	out	0x3e, r29	; 62
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	ff 90       	pop	r15
 178:	ef 90       	pop	r14
 17a:	df 90       	pop	r13
 17c:	cf 90       	pop	r12
 17e:	08 95       	ret

00000180 <dac>:
 */ 
#include<math.h>
float vref;
long int power (int , int);

float dac(float analog_digital,int dac_resolution){
 180:	ef 92       	push	r14
 182:	ff 92       	push	r15
 184:	0f 93       	push	r16
 186:	1f 93       	push	r17
 188:	cf 93       	push	r28
 18a:	df 93       	push	r29
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
 190:	2e 97       	sbiw	r28, 0x0e	; 14
 192:	cd bf       	out	0x3d, r28	; 61
 194:	de bf       	out	0x3e, r29	; 62
 196:	69 87       	std	Y+9, r22	; 0x09
 198:	7a 87       	std	Y+10, r23	; 0x0a
 19a:	8b 87       	std	Y+11, r24	; 0x0b
 19c:	9c 87       	std	Y+12, r25	; 0x0c
 19e:	4d 87       	std	Y+13, r20	; 0x0d
 1a0:	5e 87       	std	Y+14, r21	; 0x0e
	float digital_analog;
	long int b = power(2,dac_resolution)-1;
 1a2:	8d 85       	ldd	r24, Y+13	; 0x0d
 1a4:	9e 85       	ldd	r25, Y+14	; 0x0e
 1a6:	bc 01       	movw	r22, r24
 1a8:	82 e0       	ldi	r24, 0x02	; 2
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 72 01 	call	0x2e4	; 0x2e4 <power>
 1b0:	dc 01       	movw	r26, r24
 1b2:	cb 01       	movw	r24, r22
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	a1 09       	sbc	r26, r1
 1b8:	b1 09       	sbc	r27, r1
 1ba:	89 83       	std	Y+1, r24	; 0x01
 1bc:	9a 83       	std	Y+2, r25	; 0x02
 1be:	ab 83       	std	Y+3, r26	; 0x03
 1c0:	bc 83       	std	Y+4, r27	; 0x04
	digital_analog=(analog_digital/b)*vref;
 1c2:	69 81       	ldd	r22, Y+1	; 0x01
 1c4:	7a 81       	ldd	r23, Y+2	; 0x02
 1c6:	8b 81       	ldd	r24, Y+3	; 0x03
 1c8:	9c 81       	ldd	r25, Y+4	; 0x04
 1ca:	0e 94 c8 02 	call	0x590	; 0x590 <__floatsisf>
 1ce:	dc 01       	movw	r26, r24
 1d0:	cb 01       	movw	r24, r22
 1d2:	9c 01       	movw	r18, r24
 1d4:	ad 01       	movw	r20, r26
 1d6:	69 85       	ldd	r22, Y+9	; 0x09
 1d8:	7a 85       	ldd	r23, Y+10	; 0x0a
 1da:	8b 85       	ldd	r24, Y+11	; 0x0b
 1dc:	9c 85       	ldd	r25, Y+12	; 0x0c
 1de:	0e 94 1e 02 	call	0x43c	; 0x43c <__divsf3>
 1e2:	dc 01       	movw	r26, r24
 1e4:	cb 01       	movw	r24, r22
 1e6:	7c 01       	movw	r14, r24
 1e8:	8d 01       	movw	r16, r26
 1ea:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 1ee:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 1f2:	a0 91 02 28 	lds	r26, 0x2802	; 0x802802 <__DATA_REGION_ORIGIN__+0x2>
 1f6:	b0 91 03 28 	lds	r27, 0x2803	; 0x802803 <__DATA_REGION_ORIGIN__+0x3>
 1fa:	9c 01       	movw	r18, r24
 1fc:	ad 01       	movw	r20, r26
 1fe:	c8 01       	movw	r24, r16
 200:	b7 01       	movw	r22, r14
 202:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__mulsf3>
 206:	dc 01       	movw	r26, r24
 208:	cb 01       	movw	r24, r22
 20a:	8d 83       	std	Y+5, r24	; 0x05
 20c:	9e 83       	std	Y+6, r25	; 0x06
 20e:	af 83       	std	Y+7, r26	; 0x07
 210:	b8 87       	std	Y+8, r27	; 0x08
	return digital_analog;	
 212:	8d 81       	ldd	r24, Y+5	; 0x05
 214:	9e 81       	ldd	r25, Y+6	; 0x06
 216:	af 81       	ldd	r26, Y+7	; 0x07
 218:	b8 85       	ldd	r27, Y+8	; 0x08
 21a:	bc 01       	movw	r22, r24
 21c:	cd 01       	movw	r24, r26
 21e:	2e 96       	adiw	r28, 0x0e	; 14
 220:	cd bf       	out	0x3d, r28	; 61
 222:	de bf       	out	0x3e, r29	; 62
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	ff 90       	pop	r15
 22e:	ef 90       	pop	r14
 230:	08 95       	ret

00000232 <main>:

int adc(float analog_voltage,int adc_resolution);
float dac(float a,int adc_resolution);

int main(void)
{
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	cd b7       	in	r28, 0x3d	; 61
 238:	de b7       	in	r29, 0x3e	; 62
 23a:	64 97       	sbiw	r28, 0x14	; 20
 23c:	cd bf       	out	0x3d, r28	; 61
 23e:	de bf       	out	0x3e, r29	; 62
    /* Replace with your application code */
    float analog_voltage=2;
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	a0 e0       	ldi	r26, 0x00	; 0
 246:	b0 e4       	ldi	r27, 0x40	; 64
 248:	89 83       	std	Y+1, r24	; 0x01
 24a:	9a 83       	std	Y+2, r25	; 0x02
 24c:	ab 83       	std	Y+3, r26	; 0x03
 24e:	bc 83       	std	Y+4, r27	; 0x04
	int adc_resolution=14,dac_resolution=16;
 250:	8e e0       	ldi	r24, 0x0E	; 14
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	8d 83       	std	Y+5, r24	; 0x05
 256:	9e 83       	std	Y+6, r25	; 0x06
 258:	80 e1       	ldi	r24, 0x10	; 16
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	8f 83       	std	Y+7, r24	; 0x07
 25e:	98 87       	std	Y+8, r25	; 0x08
	
	float a;
	a=adc(analog_voltage,adc_resolution);
 260:	2d 81       	ldd	r18, Y+5	; 0x05
 262:	3e 81       	ldd	r19, Y+6	; 0x06
 264:	89 81       	ldd	r24, Y+1	; 0x01
 266:	9a 81       	ldd	r25, Y+2	; 0x02
 268:	ab 81       	ldd	r26, Y+3	; 0x03
 26a:	bc 81       	ldd	r27, Y+4	; 0x04
 26c:	a9 01       	movw	r20, r18
 26e:	bc 01       	movw	r22, r24
 270:	cd 01       	movw	r24, r26
 272:	0e 94 67 00 	call	0xce	; 0xce <adc>
 276:	09 2e       	mov	r0, r25
 278:	00 0c       	add	r0, r0
 27a:	aa 0b       	sbc	r26, r26
 27c:	bb 0b       	sbc	r27, r27
 27e:	bc 01       	movw	r22, r24
 280:	cd 01       	movw	r24, r26
 282:	0e 94 c8 02 	call	0x590	; 0x590 <__floatsisf>
 286:	dc 01       	movw	r26, r24
 288:	cb 01       	movw	r24, r22
 28a:	89 87       	std	Y+9, r24	; 0x09
 28c:	9a 87       	std	Y+10, r25	; 0x0a
 28e:	ab 87       	std	Y+11, r26	; 0x0b
 290:	bc 87       	std	Y+12, r27	; 0x0c
	
	float b;
	b=dac(a,dac_resolution);
 292:	2f 81       	ldd	r18, Y+7	; 0x07
 294:	38 85       	ldd	r19, Y+8	; 0x08
 296:	89 85       	ldd	r24, Y+9	; 0x09
 298:	9a 85       	ldd	r25, Y+10	; 0x0a
 29a:	ab 85       	ldd	r26, Y+11	; 0x0b
 29c:	bc 85       	ldd	r27, Y+12	; 0x0c
 29e:	a9 01       	movw	r20, r18
 2a0:	bc 01       	movw	r22, r24
 2a2:	cd 01       	movw	r24, r26
 2a4:	0e 94 c0 00 	call	0x180	; 0x180 <dac>
 2a8:	dc 01       	movw	r26, r24
 2aa:	cb 01       	movw	r24, r22
 2ac:	8d 87       	std	Y+13, r24	; 0x0d
 2ae:	9e 87       	std	Y+14, r25	; 0x0e
 2b0:	af 87       	std	Y+15, r26	; 0x0f
 2b2:	b8 8b       	std	Y+16, r27	; 0x10
	
	float result=analog_voltage - b;
 2b4:	2d 85       	ldd	r18, Y+13	; 0x0d
 2b6:	3e 85       	ldd	r19, Y+14	; 0x0e
 2b8:	4f 85       	ldd	r20, Y+15	; 0x0f
 2ba:	58 89       	ldd	r21, Y+16	; 0x10
 2bc:	69 81       	ldd	r22, Y+1	; 0x01
 2be:	7a 81       	ldd	r23, Y+2	; 0x02
 2c0:	8b 81       	ldd	r24, Y+3	; 0x03
 2c2:	9c 81       	ldd	r25, Y+4	; 0x04
 2c4:	0e 94 b1 01 	call	0x362	; 0x362 <__subsf3>
 2c8:	dc 01       	movw	r26, r24
 2ca:	cb 01       	movw	r24, r22
 2cc:	89 8b       	std	Y+17, r24	; 0x11
 2ce:	9a 8b       	std	Y+18, r25	; 0x12
 2d0:	ab 8b       	std	Y+19, r26	; 0x13
 2d2:	bc 8b       	std	Y+20, r27	; 0x14
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	90 e0       	ldi	r25, 0x00	; 0
}
 2d8:	64 96       	adiw	r28, 0x14	; 20
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	de bf       	out	0x3e, r29	; 62
 2de:	df 91       	pop	r29
 2e0:	cf 91       	pop	r28
 2e2:	08 95       	ret

000002e4 <power>:
 *
 * Created: 31-07-2024 09:16:41
 *  Author: Siyan Ananth A
 */ 

long int power(int a, int b){
 2e4:	cf 93       	push	r28
 2e6:	df 93       	push	r29
 2e8:	cd b7       	in	r28, 0x3d	; 61
 2ea:	de b7       	in	r29, 0x3e	; 62
 2ec:	28 97       	sbiw	r28, 0x08	; 8
 2ee:	cd bf       	out	0x3d, r28	; 61
 2f0:	de bf       	out	0x3e, r29	; 62
 2f2:	8d 83       	std	Y+5, r24	; 0x05
 2f4:	9e 83       	std	Y+6, r25	; 0x06
 2f6:	6f 83       	std	Y+7, r22	; 0x07
 2f8:	78 87       	std	Y+8, r23	; 0x08
	long int ans=a;
 2fa:	8d 81       	ldd	r24, Y+5	; 0x05
 2fc:	9e 81       	ldd	r25, Y+6	; 0x06
 2fe:	09 2e       	mov	r0, r25
 300:	00 0c       	add	r0, r0
 302:	aa 0b       	sbc	r26, r26
 304:	bb 0b       	sbc	r27, r27
 306:	89 83       	std	Y+1, r24	; 0x01
 308:	9a 83       	std	Y+2, r25	; 0x02
 30a:	ab 83       	std	Y+3, r26	; 0x03
 30c:	bc 83       	std	Y+4, r27	; 0x04
	while(b>1){
 30e:	19 c0       	rjmp	.+50     	; 0x342 <power+0x5e>
		ans*=a;
 310:	8d 81       	ldd	r24, Y+5	; 0x05
 312:	9e 81       	ldd	r25, Y+6	; 0x06
 314:	09 2e       	mov	r0, r25
 316:	00 0c       	add	r0, r0
 318:	aa 0b       	sbc	r26, r26
 31a:	bb 0b       	sbc	r27, r27
 31c:	29 81       	ldd	r18, Y+1	; 0x01
 31e:	3a 81       	ldd	r19, Y+2	; 0x02
 320:	4b 81       	ldd	r20, Y+3	; 0x03
 322:	5c 81       	ldd	r21, Y+4	; 0x04
 324:	bc 01       	movw	r22, r24
 326:	cd 01       	movw	r24, r26
 328:	0e 94 c1 03 	call	0x782	; 0x782 <__mulsi3>
 32c:	dc 01       	movw	r26, r24
 32e:	cb 01       	movw	r24, r22
 330:	89 83       	std	Y+1, r24	; 0x01
 332:	9a 83       	std	Y+2, r25	; 0x02
 334:	ab 83       	std	Y+3, r26	; 0x03
 336:	bc 83       	std	Y+4, r27	; 0x04
		b--;
 338:	8f 81       	ldd	r24, Y+7	; 0x07
 33a:	98 85       	ldd	r25, Y+8	; 0x08
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	8f 83       	std	Y+7, r24	; 0x07
 340:	98 87       	std	Y+8, r25	; 0x08
 *  Author: Siyan Ananth A
 */ 

long int power(int a, int b){
	long int ans=a;
	while(b>1){
 342:	8f 81       	ldd	r24, Y+7	; 0x07
 344:	98 85       	ldd	r25, Y+8	; 0x08
 346:	02 97       	sbiw	r24, 0x02	; 2
 348:	1c f7       	brge	.-58     	; 0x310 <power+0x2c>
		ans*=a;
		b--;
	}
	
	return ans;
 34a:	89 81       	ldd	r24, Y+1	; 0x01
 34c:	9a 81       	ldd	r25, Y+2	; 0x02
 34e:	ab 81       	ldd	r26, Y+3	; 0x03
 350:	bc 81       	ldd	r27, Y+4	; 0x04
 352:	bc 01       	movw	r22, r24
 354:	cd 01       	movw	r24, r26
 356:	28 96       	adiw	r28, 0x08	; 8
 358:	cd bf       	out	0x3d, r28	; 61
 35a:	de bf       	out	0x3e, r29	; 62
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	08 95       	ret

00000362 <__subsf3>:
 362:	50 58       	subi	r21, 0x80	; 128

00000364 <__addsf3>:
 364:	bb 27       	eor	r27, r27
 366:	aa 27       	eor	r26, r26
 368:	0e 94 c9 01 	call	0x392	; 0x392 <__addsf3x>
 36c:	0c 94 1a 03 	jmp	0x634	; 0x634 <__fp_round>
 370:	0e 94 0c 03 	call	0x618	; 0x618 <__fp_pscA>
 374:	38 f0       	brcs	.+14     	; 0x384 <__addsf3+0x20>
 376:	0e 94 13 03 	call	0x626	; 0x626 <__fp_pscB>
 37a:	20 f0       	brcs	.+8      	; 0x384 <__addsf3+0x20>
 37c:	39 f4       	brne	.+14     	; 0x38c <__addsf3+0x28>
 37e:	9f 3f       	cpi	r25, 0xFF	; 255
 380:	19 f4       	brne	.+6      	; 0x388 <__addsf3+0x24>
 382:	26 f4       	brtc	.+8      	; 0x38c <__addsf3+0x28>
 384:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_nan>
 388:	0e f4       	brtc	.+2      	; 0x38c <__addsf3+0x28>
 38a:	e0 95       	com	r30
 38c:	e7 fb       	bst	r30, 7
 38e:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>

00000392 <__addsf3x>:
 392:	e9 2f       	mov	r30, r25
 394:	0e 94 2b 03 	call	0x656	; 0x656 <__fp_split3>
 398:	58 f3       	brcs	.-42     	; 0x370 <__addsf3+0xc>
 39a:	ba 17       	cp	r27, r26
 39c:	62 07       	cpc	r22, r18
 39e:	73 07       	cpc	r23, r19
 3a0:	84 07       	cpc	r24, r20
 3a2:	95 07       	cpc	r25, r21
 3a4:	20 f0       	brcs	.+8      	; 0x3ae <__addsf3x+0x1c>
 3a6:	79 f4       	brne	.+30     	; 0x3c6 <__addsf3x+0x34>
 3a8:	a6 f5       	brtc	.+104    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3aa:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__fp_zero>
 3ae:	0e f4       	brtc	.+2      	; 0x3b2 <__addsf3x+0x20>
 3b0:	e0 95       	com	r30
 3b2:	0b 2e       	mov	r0, r27
 3b4:	ba 2f       	mov	r27, r26
 3b6:	a0 2d       	mov	r26, r0
 3b8:	0b 01       	movw	r0, r22
 3ba:	b9 01       	movw	r22, r18
 3bc:	90 01       	movw	r18, r0
 3be:	0c 01       	movw	r0, r24
 3c0:	ca 01       	movw	r24, r20
 3c2:	a0 01       	movw	r20, r0
 3c4:	11 24       	eor	r1, r1
 3c6:	ff 27       	eor	r31, r31
 3c8:	59 1b       	sub	r21, r25
 3ca:	99 f0       	breq	.+38     	; 0x3f2 <__addsf3x+0x60>
 3cc:	59 3f       	cpi	r21, 0xF9	; 249
 3ce:	50 f4       	brcc	.+20     	; 0x3e4 <__addsf3x+0x52>
 3d0:	50 3e       	cpi	r21, 0xE0	; 224
 3d2:	68 f1       	brcs	.+90     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3d4:	1a 16       	cp	r1, r26
 3d6:	f0 40       	sbci	r31, 0x00	; 0
 3d8:	a2 2f       	mov	r26, r18
 3da:	23 2f       	mov	r18, r19
 3dc:	34 2f       	mov	r19, r20
 3de:	44 27       	eor	r20, r20
 3e0:	58 5f       	subi	r21, 0xF8	; 248
 3e2:	f3 cf       	rjmp	.-26     	; 0x3ca <__addsf3x+0x38>
 3e4:	46 95       	lsr	r20
 3e6:	37 95       	ror	r19
 3e8:	27 95       	ror	r18
 3ea:	a7 95       	ror	r26
 3ec:	f0 40       	sbci	r31, 0x00	; 0
 3ee:	53 95       	inc	r21
 3f0:	c9 f7       	brne	.-14     	; 0x3e4 <__addsf3x+0x52>
 3f2:	7e f4       	brtc	.+30     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3f4:	1f 16       	cp	r1, r31
 3f6:	ba 0b       	sbc	r27, r26
 3f8:	62 0b       	sbc	r22, r18
 3fa:	73 0b       	sbc	r23, r19
 3fc:	84 0b       	sbc	r24, r20
 3fe:	ba f0       	brmi	.+46     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 400:	91 50       	subi	r25, 0x01	; 1
 402:	a1 f0       	breq	.+40     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 404:	ff 0f       	add	r31, r31
 406:	bb 1f       	adc	r27, r27
 408:	66 1f       	adc	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	88 1f       	adc	r24, r24
 40e:	c2 f7       	brpl	.-16     	; 0x400 <__LOCK_REGION_LENGTH__>
 410:	0e c0       	rjmp	.+28     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 412:	ba 0f       	add	r27, r26
 414:	62 1f       	adc	r22, r18
 416:	73 1f       	adc	r23, r19
 418:	84 1f       	adc	r24, r20
 41a:	48 f4       	brcc	.+18     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 41c:	87 95       	ror	r24
 41e:	77 95       	ror	r23
 420:	67 95       	ror	r22
 422:	b7 95       	ror	r27
 424:	f7 95       	ror	r31
 426:	9e 3f       	cpi	r25, 0xFE	; 254
 428:	08 f0       	brcs	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42a:	b0 cf       	rjmp	.-160    	; 0x38c <__addsf3+0x28>
 42c:	93 95       	inc	r25
 42e:	88 0f       	add	r24, r24
 430:	08 f0       	brcs	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 432:	99 27       	eor	r25, r25
 434:	ee 0f       	add	r30, r30
 436:	97 95       	ror	r25
 438:	87 95       	ror	r24
 43a:	08 95       	ret

0000043c <__divsf3>:
 43c:	0e 94 32 02 	call	0x464	; 0x464 <__divsf3x>
 440:	0c 94 1a 03 	jmp	0x634	; 0x634 <__fp_round>
 444:	0e 94 13 03 	call	0x626	; 0x626 <__fp_pscB>
 448:	58 f0       	brcs	.+22     	; 0x460 <__divsf3+0x24>
 44a:	0e 94 0c 03 	call	0x618	; 0x618 <__fp_pscA>
 44e:	40 f0       	brcs	.+16     	; 0x460 <__divsf3+0x24>
 450:	29 f4       	brne	.+10     	; 0x45c <__divsf3+0x20>
 452:	5f 3f       	cpi	r21, 0xFF	; 255
 454:	29 f0       	breq	.+10     	; 0x460 <__divsf3+0x24>
 456:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 45a:	51 11       	cpse	r21, r1
 45c:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_szero>
 460:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_nan>

00000464 <__divsf3x>:
 464:	0e 94 2b 03 	call	0x656	; 0x656 <__fp_split3>
 468:	68 f3       	brcs	.-38     	; 0x444 <__divsf3+0x8>

0000046a <__divsf3_pse>:
 46a:	99 23       	and	r25, r25
 46c:	b1 f3       	breq	.-20     	; 0x45a <__divsf3+0x1e>
 46e:	55 23       	and	r21, r21
 470:	91 f3       	breq	.-28     	; 0x456 <__divsf3+0x1a>
 472:	95 1b       	sub	r25, r21
 474:	55 0b       	sbc	r21, r21
 476:	bb 27       	eor	r27, r27
 478:	aa 27       	eor	r26, r26
 47a:	62 17       	cp	r22, r18
 47c:	73 07       	cpc	r23, r19
 47e:	84 07       	cpc	r24, r20
 480:	38 f0       	brcs	.+14     	; 0x490 <__divsf3_pse+0x26>
 482:	9f 5f       	subi	r25, 0xFF	; 255
 484:	5f 4f       	sbci	r21, 0xFF	; 255
 486:	22 0f       	add	r18, r18
 488:	33 1f       	adc	r19, r19
 48a:	44 1f       	adc	r20, r20
 48c:	aa 1f       	adc	r26, r26
 48e:	a9 f3       	breq	.-22     	; 0x47a <__divsf3_pse+0x10>
 490:	35 d0       	rcall	.+106    	; 0x4fc <__divsf3_pse+0x92>
 492:	0e 2e       	mov	r0, r30
 494:	3a f0       	brmi	.+14     	; 0x4a4 <__divsf3_pse+0x3a>
 496:	e0 e8       	ldi	r30, 0x80	; 128
 498:	32 d0       	rcall	.+100    	; 0x4fe <__divsf3_pse+0x94>
 49a:	91 50       	subi	r25, 0x01	; 1
 49c:	50 40       	sbci	r21, 0x00	; 0
 49e:	e6 95       	lsr	r30
 4a0:	00 1c       	adc	r0, r0
 4a2:	ca f7       	brpl	.-14     	; 0x496 <__divsf3_pse+0x2c>
 4a4:	2b d0       	rcall	.+86     	; 0x4fc <__divsf3_pse+0x92>
 4a6:	fe 2f       	mov	r31, r30
 4a8:	29 d0       	rcall	.+82     	; 0x4fc <__divsf3_pse+0x92>
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	bb 1f       	adc	r27, r27
 4b2:	26 17       	cp	r18, r22
 4b4:	37 07       	cpc	r19, r23
 4b6:	48 07       	cpc	r20, r24
 4b8:	ab 07       	cpc	r26, r27
 4ba:	b0 e8       	ldi	r27, 0x80	; 128
 4bc:	09 f0       	breq	.+2      	; 0x4c0 <__divsf3_pse+0x56>
 4be:	bb 0b       	sbc	r27, r27
 4c0:	80 2d       	mov	r24, r0
 4c2:	bf 01       	movw	r22, r30
 4c4:	ff 27       	eor	r31, r31
 4c6:	93 58       	subi	r25, 0x83	; 131
 4c8:	5f 4f       	sbci	r21, 0xFF	; 255
 4ca:	3a f0       	brmi	.+14     	; 0x4da <__divsf3_pse+0x70>
 4cc:	9e 3f       	cpi	r25, 0xFE	; 254
 4ce:	51 05       	cpc	r21, r1
 4d0:	78 f0       	brcs	.+30     	; 0x4f0 <__divsf3_pse+0x86>
 4d2:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 4d6:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_szero>
 4da:	5f 3f       	cpi	r21, 0xFF	; 255
 4dc:	e4 f3       	brlt	.-8      	; 0x4d6 <__divsf3_pse+0x6c>
 4de:	98 3e       	cpi	r25, 0xE8	; 232
 4e0:	d4 f3       	brlt	.-12     	; 0x4d6 <__divsf3_pse+0x6c>
 4e2:	86 95       	lsr	r24
 4e4:	77 95       	ror	r23
 4e6:	67 95       	ror	r22
 4e8:	b7 95       	ror	r27
 4ea:	f7 95       	ror	r31
 4ec:	9f 5f       	subi	r25, 0xFF	; 255
 4ee:	c9 f7       	brne	.-14     	; 0x4e2 <__divsf3_pse+0x78>
 4f0:	88 0f       	add	r24, r24
 4f2:	91 1d       	adc	r25, r1
 4f4:	96 95       	lsr	r25
 4f6:	87 95       	ror	r24
 4f8:	97 f9       	bld	r25, 7
 4fa:	08 95       	ret
 4fc:	e1 e0       	ldi	r30, 0x01	; 1
 4fe:	66 0f       	add	r22, r22
 500:	77 1f       	adc	r23, r23
 502:	88 1f       	adc	r24, r24
 504:	bb 1f       	adc	r27, r27
 506:	62 17       	cp	r22, r18
 508:	73 07       	cpc	r23, r19
 50a:	84 07       	cpc	r24, r20
 50c:	ba 07       	cpc	r27, r26
 50e:	20 f0       	brcs	.+8      	; 0x518 <__divsf3_pse+0xae>
 510:	62 1b       	sub	r22, r18
 512:	73 0b       	sbc	r23, r19
 514:	84 0b       	sbc	r24, r20
 516:	ba 0b       	sbc	r27, r26
 518:	ee 1f       	adc	r30, r30
 51a:	88 f7       	brcc	.-30     	; 0x4fe <__divsf3_pse+0x94>
 51c:	e0 95       	com	r30
 51e:	08 95       	ret

00000520 <__fixsfsi>:
 520:	0e 94 97 02 	call	0x52e	; 0x52e <__fixunssfsi>
 524:	68 94       	set
 526:	b1 11       	cpse	r27, r1
 528:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_szero>
 52c:	08 95       	ret

0000052e <__fixunssfsi>:
 52e:	0e 94 33 03 	call	0x666	; 0x666 <__fp_splitA>
 532:	88 f0       	brcs	.+34     	; 0x556 <__fixunssfsi+0x28>
 534:	9f 57       	subi	r25, 0x7F	; 127
 536:	98 f0       	brcs	.+38     	; 0x55e <__fixunssfsi+0x30>
 538:	b9 2f       	mov	r27, r25
 53a:	99 27       	eor	r25, r25
 53c:	b7 51       	subi	r27, 0x17	; 23
 53e:	b0 f0       	brcs	.+44     	; 0x56c <__fixunssfsi+0x3e>
 540:	e1 f0       	breq	.+56     	; 0x57a <__fixunssfsi+0x4c>
 542:	66 0f       	add	r22, r22
 544:	77 1f       	adc	r23, r23
 546:	88 1f       	adc	r24, r24
 548:	99 1f       	adc	r25, r25
 54a:	1a f0       	brmi	.+6      	; 0x552 <__fixunssfsi+0x24>
 54c:	ba 95       	dec	r27
 54e:	c9 f7       	brne	.-14     	; 0x542 <__fixunssfsi+0x14>
 550:	14 c0       	rjmp	.+40     	; 0x57a <__fixunssfsi+0x4c>
 552:	b1 30       	cpi	r27, 0x01	; 1
 554:	91 f0       	breq	.+36     	; 0x57a <__fixunssfsi+0x4c>
 556:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_zero>
 55a:	b1 e0       	ldi	r27, 0x01	; 1
 55c:	08 95       	ret
 55e:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__fp_zero>
 562:	67 2f       	mov	r22, r23
 564:	78 2f       	mov	r23, r24
 566:	88 27       	eor	r24, r24
 568:	b8 5f       	subi	r27, 0xF8	; 248
 56a:	39 f0       	breq	.+14     	; 0x57a <__fixunssfsi+0x4c>
 56c:	b9 3f       	cpi	r27, 0xF9	; 249
 56e:	cc f3       	brlt	.-14     	; 0x562 <__fixunssfsi+0x34>
 570:	86 95       	lsr	r24
 572:	77 95       	ror	r23
 574:	67 95       	ror	r22
 576:	b3 95       	inc	r27
 578:	d9 f7       	brne	.-10     	; 0x570 <__fixunssfsi+0x42>
 57a:	3e f4       	brtc	.+14     	; 0x58a <__fixunssfsi+0x5c>
 57c:	90 95       	com	r25
 57e:	80 95       	com	r24
 580:	70 95       	com	r23
 582:	61 95       	neg	r22
 584:	7f 4f       	sbci	r23, 0xFF	; 255
 586:	8f 4f       	sbci	r24, 0xFF	; 255
 588:	9f 4f       	sbci	r25, 0xFF	; 255
 58a:	08 95       	ret

0000058c <__floatunsisf>:
 58c:	e8 94       	clt
 58e:	09 c0       	rjmp	.+18     	; 0x5a2 <__floatsisf+0x12>

00000590 <__floatsisf>:
 590:	97 fb       	bst	r25, 7
 592:	3e f4       	brtc	.+14     	; 0x5a2 <__floatsisf+0x12>
 594:	90 95       	com	r25
 596:	80 95       	com	r24
 598:	70 95       	com	r23
 59a:	61 95       	neg	r22
 59c:	7f 4f       	sbci	r23, 0xFF	; 255
 59e:	8f 4f       	sbci	r24, 0xFF	; 255
 5a0:	9f 4f       	sbci	r25, 0xFF	; 255
 5a2:	99 23       	and	r25, r25
 5a4:	a9 f0       	breq	.+42     	; 0x5d0 <__floatsisf+0x40>
 5a6:	f9 2f       	mov	r31, r25
 5a8:	96 e9       	ldi	r25, 0x96	; 150
 5aa:	bb 27       	eor	r27, r27
 5ac:	93 95       	inc	r25
 5ae:	f6 95       	lsr	r31
 5b0:	87 95       	ror	r24
 5b2:	77 95       	ror	r23
 5b4:	67 95       	ror	r22
 5b6:	b7 95       	ror	r27
 5b8:	f1 11       	cpse	r31, r1
 5ba:	f8 cf       	rjmp	.-16     	; 0x5ac <__floatsisf+0x1c>
 5bc:	fa f4       	brpl	.+62     	; 0x5fc <__floatsisf+0x6c>
 5be:	bb 0f       	add	r27, r27
 5c0:	11 f4       	brne	.+4      	; 0x5c6 <__floatsisf+0x36>
 5c2:	60 ff       	sbrs	r22, 0
 5c4:	1b c0       	rjmp	.+54     	; 0x5fc <__floatsisf+0x6c>
 5c6:	6f 5f       	subi	r22, 0xFF	; 255
 5c8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ca:	8f 4f       	sbci	r24, 0xFF	; 255
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	16 c0       	rjmp	.+44     	; 0x5fc <__floatsisf+0x6c>
 5d0:	88 23       	and	r24, r24
 5d2:	11 f0       	breq	.+4      	; 0x5d8 <__floatsisf+0x48>
 5d4:	96 e9       	ldi	r25, 0x96	; 150
 5d6:	11 c0       	rjmp	.+34     	; 0x5fa <__floatsisf+0x6a>
 5d8:	77 23       	and	r23, r23
 5da:	21 f0       	breq	.+8      	; 0x5e4 <__floatsisf+0x54>
 5dc:	9e e8       	ldi	r25, 0x8E	; 142
 5de:	87 2f       	mov	r24, r23
 5e0:	76 2f       	mov	r23, r22
 5e2:	05 c0       	rjmp	.+10     	; 0x5ee <__floatsisf+0x5e>
 5e4:	66 23       	and	r22, r22
 5e6:	71 f0       	breq	.+28     	; 0x604 <__floatsisf+0x74>
 5e8:	96 e8       	ldi	r25, 0x86	; 134
 5ea:	86 2f       	mov	r24, r22
 5ec:	70 e0       	ldi	r23, 0x00	; 0
 5ee:	60 e0       	ldi	r22, 0x00	; 0
 5f0:	2a f0       	brmi	.+10     	; 0x5fc <__floatsisf+0x6c>
 5f2:	9a 95       	dec	r25
 5f4:	66 0f       	add	r22, r22
 5f6:	77 1f       	adc	r23, r23
 5f8:	88 1f       	adc	r24, r24
 5fa:	da f7       	brpl	.-10     	; 0x5f2 <__floatsisf+0x62>
 5fc:	88 0f       	add	r24, r24
 5fe:	96 95       	lsr	r25
 600:	87 95       	ror	r24
 602:	97 f9       	bld	r25, 7
 604:	08 95       	ret

00000606 <__fp_inf>:
 606:	97 f9       	bld	r25, 7
 608:	9f 67       	ori	r25, 0x7F	; 127
 60a:	80 e8       	ldi	r24, 0x80	; 128
 60c:	70 e0       	ldi	r23, 0x00	; 0
 60e:	60 e0       	ldi	r22, 0x00	; 0
 610:	08 95       	ret

00000612 <__fp_nan>:
 612:	9f ef       	ldi	r25, 0xFF	; 255
 614:	80 ec       	ldi	r24, 0xC0	; 192
 616:	08 95       	ret

00000618 <__fp_pscA>:
 618:	00 24       	eor	r0, r0
 61a:	0a 94       	dec	r0
 61c:	16 16       	cp	r1, r22
 61e:	17 06       	cpc	r1, r23
 620:	18 06       	cpc	r1, r24
 622:	09 06       	cpc	r0, r25
 624:	08 95       	ret

00000626 <__fp_pscB>:
 626:	00 24       	eor	r0, r0
 628:	0a 94       	dec	r0
 62a:	12 16       	cp	r1, r18
 62c:	13 06       	cpc	r1, r19
 62e:	14 06       	cpc	r1, r20
 630:	05 06       	cpc	r0, r21
 632:	08 95       	ret

00000634 <__fp_round>:
 634:	09 2e       	mov	r0, r25
 636:	03 94       	inc	r0
 638:	00 0c       	add	r0, r0
 63a:	11 f4       	brne	.+4      	; 0x640 <__fp_round+0xc>
 63c:	88 23       	and	r24, r24
 63e:	52 f0       	brmi	.+20     	; 0x654 <__fp_round+0x20>
 640:	bb 0f       	add	r27, r27
 642:	40 f4       	brcc	.+16     	; 0x654 <__fp_round+0x20>
 644:	bf 2b       	or	r27, r31
 646:	11 f4       	brne	.+4      	; 0x64c <__fp_round+0x18>
 648:	60 ff       	sbrs	r22, 0
 64a:	04 c0       	rjmp	.+8      	; 0x654 <__fp_round+0x20>
 64c:	6f 5f       	subi	r22, 0xFF	; 255
 64e:	7f 4f       	sbci	r23, 0xFF	; 255
 650:	8f 4f       	sbci	r24, 0xFF	; 255
 652:	9f 4f       	sbci	r25, 0xFF	; 255
 654:	08 95       	ret

00000656 <__fp_split3>:
 656:	57 fd       	sbrc	r21, 7
 658:	90 58       	subi	r25, 0x80	; 128
 65a:	44 0f       	add	r20, r20
 65c:	55 1f       	adc	r21, r21
 65e:	59 f0       	breq	.+22     	; 0x676 <__fp_splitA+0x10>
 660:	5f 3f       	cpi	r21, 0xFF	; 255
 662:	71 f0       	breq	.+28     	; 0x680 <__fp_splitA+0x1a>
 664:	47 95       	ror	r20

00000666 <__fp_splitA>:
 666:	88 0f       	add	r24, r24
 668:	97 fb       	bst	r25, 7
 66a:	99 1f       	adc	r25, r25
 66c:	61 f0       	breq	.+24     	; 0x686 <__fp_splitA+0x20>
 66e:	9f 3f       	cpi	r25, 0xFF	; 255
 670:	79 f0       	breq	.+30     	; 0x690 <__fp_splitA+0x2a>
 672:	87 95       	ror	r24
 674:	08 95       	ret
 676:	12 16       	cp	r1, r18
 678:	13 06       	cpc	r1, r19
 67a:	14 06       	cpc	r1, r20
 67c:	55 1f       	adc	r21, r21
 67e:	f2 cf       	rjmp	.-28     	; 0x664 <__fp_split3+0xe>
 680:	46 95       	lsr	r20
 682:	f1 df       	rcall	.-30     	; 0x666 <__fp_splitA>
 684:	08 c0       	rjmp	.+16     	; 0x696 <__fp_splitA+0x30>
 686:	16 16       	cp	r1, r22
 688:	17 06       	cpc	r1, r23
 68a:	18 06       	cpc	r1, r24
 68c:	99 1f       	adc	r25, r25
 68e:	f1 cf       	rjmp	.-30     	; 0x672 <__fp_splitA+0xc>
 690:	86 95       	lsr	r24
 692:	71 05       	cpc	r23, r1
 694:	61 05       	cpc	r22, r1
 696:	08 94       	sec
 698:	08 95       	ret

0000069a <__fp_zero>:
 69a:	e8 94       	clt

0000069c <__fp_szero>:
 69c:	bb 27       	eor	r27, r27
 69e:	66 27       	eor	r22, r22
 6a0:	77 27       	eor	r23, r23
 6a2:	cb 01       	movw	r24, r22
 6a4:	97 f9       	bld	r25, 7
 6a6:	08 95       	ret

000006a8 <__mulsf3>:
 6a8:	0e 94 67 03 	call	0x6ce	; 0x6ce <__mulsf3x>
 6ac:	0c 94 1a 03 	jmp	0x634	; 0x634 <__fp_round>
 6b0:	0e 94 0c 03 	call	0x618	; 0x618 <__fp_pscA>
 6b4:	38 f0       	brcs	.+14     	; 0x6c4 <__mulsf3+0x1c>
 6b6:	0e 94 13 03 	call	0x626	; 0x626 <__fp_pscB>
 6ba:	20 f0       	brcs	.+8      	; 0x6c4 <__mulsf3+0x1c>
 6bc:	95 23       	and	r25, r21
 6be:	11 f0       	breq	.+4      	; 0x6c4 <__mulsf3+0x1c>
 6c0:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 6c4:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_nan>
 6c8:	11 24       	eor	r1, r1
 6ca:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_szero>

000006ce <__mulsf3x>:
 6ce:	0e 94 2b 03 	call	0x656	; 0x656 <__fp_split3>
 6d2:	70 f3       	brcs	.-36     	; 0x6b0 <__mulsf3+0x8>

000006d4 <__mulsf3_pse>:
 6d4:	95 9f       	mul	r25, r21
 6d6:	c1 f3       	breq	.-16     	; 0x6c8 <__mulsf3+0x20>
 6d8:	95 0f       	add	r25, r21
 6da:	50 e0       	ldi	r21, 0x00	; 0
 6dc:	55 1f       	adc	r21, r21
 6de:	62 9f       	mul	r22, r18
 6e0:	f0 01       	movw	r30, r0
 6e2:	72 9f       	mul	r23, r18
 6e4:	bb 27       	eor	r27, r27
 6e6:	f0 0d       	add	r31, r0
 6e8:	b1 1d       	adc	r27, r1
 6ea:	63 9f       	mul	r22, r19
 6ec:	aa 27       	eor	r26, r26
 6ee:	f0 0d       	add	r31, r0
 6f0:	b1 1d       	adc	r27, r1
 6f2:	aa 1f       	adc	r26, r26
 6f4:	64 9f       	mul	r22, r20
 6f6:	66 27       	eor	r22, r22
 6f8:	b0 0d       	add	r27, r0
 6fa:	a1 1d       	adc	r26, r1
 6fc:	66 1f       	adc	r22, r22
 6fe:	82 9f       	mul	r24, r18
 700:	22 27       	eor	r18, r18
 702:	b0 0d       	add	r27, r0
 704:	a1 1d       	adc	r26, r1
 706:	62 1f       	adc	r22, r18
 708:	73 9f       	mul	r23, r19
 70a:	b0 0d       	add	r27, r0
 70c:	a1 1d       	adc	r26, r1
 70e:	62 1f       	adc	r22, r18
 710:	83 9f       	mul	r24, r19
 712:	a0 0d       	add	r26, r0
 714:	61 1d       	adc	r22, r1
 716:	22 1f       	adc	r18, r18
 718:	74 9f       	mul	r23, r20
 71a:	33 27       	eor	r19, r19
 71c:	a0 0d       	add	r26, r0
 71e:	61 1d       	adc	r22, r1
 720:	23 1f       	adc	r18, r19
 722:	84 9f       	mul	r24, r20
 724:	60 0d       	add	r22, r0
 726:	21 1d       	adc	r18, r1
 728:	82 2f       	mov	r24, r18
 72a:	76 2f       	mov	r23, r22
 72c:	6a 2f       	mov	r22, r26
 72e:	11 24       	eor	r1, r1
 730:	9f 57       	subi	r25, 0x7F	; 127
 732:	50 40       	sbci	r21, 0x00	; 0
 734:	9a f0       	brmi	.+38     	; 0x75c <__mulsf3_pse+0x88>
 736:	f1 f0       	breq	.+60     	; 0x774 <__mulsf3_pse+0xa0>
 738:	88 23       	and	r24, r24
 73a:	4a f0       	brmi	.+18     	; 0x74e <__mulsf3_pse+0x7a>
 73c:	ee 0f       	add	r30, r30
 73e:	ff 1f       	adc	r31, r31
 740:	bb 1f       	adc	r27, r27
 742:	66 1f       	adc	r22, r22
 744:	77 1f       	adc	r23, r23
 746:	88 1f       	adc	r24, r24
 748:	91 50       	subi	r25, 0x01	; 1
 74a:	50 40       	sbci	r21, 0x00	; 0
 74c:	a9 f7       	brne	.-22     	; 0x738 <__mulsf3_pse+0x64>
 74e:	9e 3f       	cpi	r25, 0xFE	; 254
 750:	51 05       	cpc	r21, r1
 752:	80 f0       	brcs	.+32     	; 0x774 <__mulsf3_pse+0xa0>
 754:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_inf>
 758:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_szero>
 75c:	5f 3f       	cpi	r21, 0xFF	; 255
 75e:	e4 f3       	brlt	.-8      	; 0x758 <__mulsf3_pse+0x84>
 760:	98 3e       	cpi	r25, 0xE8	; 232
 762:	d4 f3       	brlt	.-12     	; 0x758 <__mulsf3_pse+0x84>
 764:	86 95       	lsr	r24
 766:	77 95       	ror	r23
 768:	67 95       	ror	r22
 76a:	b7 95       	ror	r27
 76c:	f7 95       	ror	r31
 76e:	e7 95       	ror	r30
 770:	9f 5f       	subi	r25, 0xFF	; 255
 772:	c1 f7       	brne	.-16     	; 0x764 <__mulsf3_pse+0x90>
 774:	fe 2b       	or	r31, r30
 776:	88 0f       	add	r24, r24
 778:	91 1d       	adc	r25, r1
 77a:	96 95       	lsr	r25
 77c:	87 95       	ror	r24
 77e:	97 f9       	bld	r25, 7
 780:	08 95       	ret

00000782 <__mulsi3>:
 782:	db 01       	movw	r26, r22
 784:	8f 93       	push	r24
 786:	9f 93       	push	r25
 788:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__muluhisi3>
 78c:	bf 91       	pop	r27
 78e:	af 91       	pop	r26
 790:	a2 9f       	mul	r26, r18
 792:	80 0d       	add	r24, r0
 794:	91 1d       	adc	r25, r1
 796:	a3 9f       	mul	r26, r19
 798:	90 0d       	add	r25, r0
 79a:	b2 9f       	mul	r27, r18
 79c:	90 0d       	add	r25, r0
 79e:	11 24       	eor	r1, r1
 7a0:	08 95       	ret

000007a2 <__muluhisi3>:
 7a2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__umulhisi3>
 7a6:	a5 9f       	mul	r26, r21
 7a8:	90 0d       	add	r25, r0
 7aa:	b4 9f       	mul	r27, r20
 7ac:	90 0d       	add	r25, r0
 7ae:	a4 9f       	mul	r26, r20
 7b0:	80 0d       	add	r24, r0
 7b2:	91 1d       	adc	r25, r1
 7b4:	11 24       	eor	r1, r1
 7b6:	08 95       	ret

000007b8 <__umulhisi3>:
 7b8:	a2 9f       	mul	r26, r18
 7ba:	b0 01       	movw	r22, r0
 7bc:	b3 9f       	mul	r27, r19
 7be:	c0 01       	movw	r24, r0
 7c0:	a3 9f       	mul	r26, r19
 7c2:	70 0d       	add	r23, r0
 7c4:	81 1d       	adc	r24, r1
 7c6:	11 24       	eor	r1, r1
 7c8:	91 1d       	adc	r25, r1
 7ca:	b2 9f       	mul	r27, r18
 7cc:	70 0d       	add	r23, r0
 7ce:	81 1d       	adc	r24, r1
 7d0:	11 24       	eor	r1, r1
 7d2:	91 1d       	adc	r25, r1
 7d4:	08 95       	ret

000007d6 <_exit>:
 7d6:	f8 94       	cli

000007d8 <__stop_program>:
 7d8:	ff cf       	rjmp	.-2      	; 0x7d8 <__stop_program>
