
my3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  000001ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000166  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000014  00004166  00000166  000001da  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .comment      00000030  00000000  00000000  000001ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000220  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023da  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000218d  00000000  00000000  0000267a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000243  00000000  00000000  00004807  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00004a4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000101e  00000000  00000000  00004ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000008e  00000000  00000000  00005ad2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00005b60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  68:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  6c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  70:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  74:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  78:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  7c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  80:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  84:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  88:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  8c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	0e 94 54 00 	call	0xa8	; 0xa8 <main>
  a0:	0c 94 b1 00 	jmp	0x162	; 0x162 <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <main>:
 */ 

#include <avr/io.h>
int search(int ,int );
int main(void)
{  
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
  b0:	68 97       	sbiw	r28, 0x18	; 24
  b2:	cd bf       	out	0x3d, r28	; 61
  b4:	de bf       	out	0x3e, r29	; 62
	int p[]={5,6,4,7,8,54,1,12,36,11};
  b6:	84 e1       	ldi	r24, 0x14	; 20
  b8:	e6 e6       	ldi	r30, 0x66	; 102
  ba:	f1 e4       	ldi	r31, 0x41	; 65
  bc:	de 01       	movw	r26, r28
  be:	15 96       	adiw	r26, 0x05	; 5
  c0:	01 90       	ld	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	8a 95       	dec	r24
  c6:	e1 f7       	brne	.-8      	; 0xc0 <main+0x18>
	int b=1;
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	89 83       	std	Y+1, r24	; 0x01
  ce:	9a 83       	std	Y+2, r25	; 0x02
    int a=search(p,b);
  d0:	ce 01       	movw	r24, r28
  d2:	05 96       	adiw	r24, 0x05	; 5
  d4:	29 81       	ldd	r18, Y+1	; 0x01
  d6:	3a 81       	ldd	r19, Y+2	; 0x02
  d8:	b9 01       	movw	r22, r18
  da:	0e 94 79 00 	call	0xf2	; 0xf2 <search>
  de:	8b 83       	std	Y+3, r24	; 0x03
  e0:	9c 83       	std	Y+4, r25	; 0x04
	return a;
  e2:	8b 81       	ldd	r24, Y+3	; 0x03
  e4:	9c 81       	ldd	r25, Y+4	; 0x04
}
  e6:	68 96       	adiw	r28, 0x18	; 24
  e8:	cd bf       	out	0x3d, r28	; 61
  ea:	de bf       	out	0x3e, r29	; 62
  ec:	df 91       	pop	r29
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <search>:
 *
 * Created: 31-07-2024 14:46:14
 *  Author: ADITHYA ANIL
 */ 
int search(int m[10],int n)
{
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	cd b7       	in	r28, 0x3d	; 61
  f8:	de b7       	in	r29, 0x3e	; 62
  fa:	28 97       	sbiw	r28, 0x08	; 8
  fc:	cd bf       	out	0x3d, r28	; 61
  fe:	de bf       	out	0x3e, r29	; 62
 100:	8d 83       	std	Y+5, r24	; 0x05
 102:	9e 83       	std	Y+6, r25	; 0x06
 104:	6f 83       	std	Y+7, r22	; 0x07
 106:	78 87       	std	Y+8, r23	; 0x08
	int i;int c;
	for(i=0;i<10;i++)
 108:	19 82       	std	Y+1, r1	; 0x01
 10a:	1a 82       	std	Y+2, r1	; 0x02
 10c:	1e c0       	rjmp	.+60     	; 0x14a <__EEPROM_REGION_LENGTH__+0x4a>
	{
		if(m[i]==n)
 10e:	89 81       	ldd	r24, Y+1	; 0x01
 110:	9a 81       	ldd	r25, Y+2	; 0x02
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	2d 81       	ldd	r18, Y+5	; 0x05
 118:	3e 81       	ldd	r19, Y+6	; 0x06
 11a:	82 0f       	add	r24, r18
 11c:	93 1f       	adc	r25, r19
 11e:	fc 01       	movw	r30, r24
 120:	20 81       	ld	r18, Z
 122:	31 81       	ldd	r19, Z+1	; 0x01
 124:	8f 81       	ldd	r24, Y+7	; 0x07
 126:	98 85       	ldd	r25, Y+8	; 0x08
 128:	28 17       	cp	r18, r24
 12a:	39 07       	cpc	r19, r25
 12c:	29 f4       	brne	.+10     	; 0x138 <__EEPROM_REGION_LENGTH__+0x38>
		{
			c=i;
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	9a 81       	ldd	r25, Y+2	; 0x02
 132:	8b 83       	std	Y+3, r24	; 0x03
 134:	9c 83       	std	Y+4, r25	; 0x04
			break;
 136:	0d c0       	rjmp	.+26     	; 0x152 <__EEPROM_REGION_LENGTH__+0x52>
		}
		else
		c=-1;
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	9f ef       	ldi	r25, 0xFF	; 255
 13c:	8b 83       	std	Y+3, r24	; 0x03
 13e:	9c 83       	std	Y+4, r25	; 0x04
 *  Author: ADITHYA ANIL
 */ 
int search(int m[10],int n)
{
	int i;int c;
	for(i=0;i<10;i++)
 140:	89 81       	ldd	r24, Y+1	; 0x01
 142:	9a 81       	ldd	r25, Y+2	; 0x02
 144:	01 96       	adiw	r24, 0x01	; 1
 146:	89 83       	std	Y+1, r24	; 0x01
 148:	9a 83       	std	Y+2, r25	; 0x02
 14a:	89 81       	ldd	r24, Y+1	; 0x01
 14c:	9a 81       	ldd	r25, Y+2	; 0x02
 14e:	0a 97       	sbiw	r24, 0x0a	; 10
 150:	f4 f2       	brlt	.-68     	; 0x10e <__EEPROM_REGION_LENGTH__+0xe>
			break;
		}
		else
		c=-1;
	}
	return c;
 152:	8b 81       	ldd	r24, Y+3	; 0x03
 154:	9c 81       	ldd	r25, Y+4	; 0x04
 156:	28 96       	adiw	r28, 0x08	; 8
 158:	cd bf       	out	0x3d, r28	; 61
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <_exit>:
 162:	f8 94       	cli

00000164 <__stop_program>:
 164:	ff cf       	rjmp	.-2      	; 0x164 <__stop_program>
