
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  000007a2  00000816  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007a2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000842  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000874  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008fc  00000000  00000000  00000914  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000772  00000000  00000000  00001210  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039b  00000000  00000000  00001982  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  00001d20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000432  00000000  00000000  00001df4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000158  00000000  00000000  00002226  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000237e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ea       	ldi	r30, 0xA2	; 162
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 32       	cpi	r26, 0x2C	; 44
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 0c 01 	call	0x218	; 0x218 <main>
  8e:	0c 94 cf 03 	jmp	0x79e	; 0x79e <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <adc_convert>:
#include "adc.h"

extern float Vref;

uint16_t adc_convert(float analog_voltage, uint8_t n) 
{
  96:	ef 92       	push	r14
  98:	ff 92       	push	r15
  9a:	0f 93       	push	r16
  9c:	1f 93       	push	r17
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
  a6:	27 97       	sbiw	r28, 0x07	; 7
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	f8 94       	cli
  ac:	de bf       	out	0x3e, r29	; 62
  ae:	0f be       	out	0x3f, r0	; 63
  b0:	cd bf       	out	0x3d, r28	; 61
  b2:	6b 83       	std	Y+3, r22	; 0x03
  b4:	7c 83       	std	Y+4, r23	; 0x04
  b6:	8d 83       	std	Y+5, r24	; 0x05
  b8:	9e 83       	std	Y+6, r25	; 0x06
  ba:	4f 83       	std	Y+7, r20	; 0x07
	uint16_t digital_value = (analog_voltage * ((1 << n) - 1)) / Vref;
  bc:	8f 81       	ldd	r24, Y+7	; 0x07
  be:	28 2f       	mov	r18, r24
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	02 c0       	rjmp	.+4      	; 0xcc <adc_convert+0x36>
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	2a 95       	dec	r18
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <adc_convert+0x32>
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	09 2e       	mov	r0, r25
  d4:	00 0c       	add	r0, r0
  d6:	aa 0b       	sbc	r26, r26
  d8:	bb 0b       	sbc	r27, r27
  da:	bc 01       	movw	r22, r24
  dc:	cd 01       	movw	r24, r26
  de:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__floatsisf>
  e2:	dc 01       	movw	r26, r24
  e4:	cb 01       	movw	r24, r22
  e6:	2b 81       	ldd	r18, Y+3	; 0x03
  e8:	3c 81       	ldd	r19, Y+4	; 0x04
  ea:	4d 81       	ldd	r20, Y+5	; 0x05
  ec:	5e 81       	ldd	r21, Y+6	; 0x06
  ee:	bc 01       	movw	r22, r24
  f0:	cd 01       	movw	r24, r26
  f2:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__mulsf3>
  f6:	dc 01       	movw	r26, r24
  f8:	cb 01       	movw	r24, r22
  fa:	7c 01       	movw	r14, r24
  fc:	8d 01       	movw	r16, r26
  fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 102:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 106:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 10a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 10e:	9c 01       	movw	r18, r24
 110:	ad 01       	movw	r20, r26
 112:	c8 01       	movw	r24, r16
 114:	b7 01       	movw	r22, r14
 116:	0e 94 33 02 	call	0x466	; 0x466 <__divsf3>
 11a:	dc 01       	movw	r26, r24
 11c:	cb 01       	movw	r24, r22
 11e:	bc 01       	movw	r22, r24
 120:	cd 01       	movw	r24, r26
 122:	0e 94 a5 02 	call	0x54a	; 0x54a <__fixunssfsi>
 126:	dc 01       	movw	r26, r24
 128:	cb 01       	movw	r24, r22
 12a:	9a 83       	std	Y+2, r25	; 0x02
 12c:	89 83       	std	Y+1, r24	; 0x01
	return digital_value;
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	9a 81       	ldd	r25, Y+2	; 0x02
}
 132:	27 96       	adiw	r28, 0x07	; 7
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	f8 94       	cli
 138:	de bf       	out	0x3e, r29	; 62
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	cd bf       	out	0x3d, r28	; 61
 13e:	df 91       	pop	r29
 140:	cf 91       	pop	r28
 142:	1f 91       	pop	r17
 144:	0f 91       	pop	r16
 146:	ff 90       	pop	r15
 148:	ef 90       	pop	r14
 14a:	08 95       	ret

0000014c <dac_convert>:
#include "dac.h"

extern float Vref;

float dac_convert(uint16_t digital_value, uint8_t n) 
{
 14c:	cf 92       	push	r12
 14e:	df 92       	push	r13
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	0f 93       	push	r16
 156:	1f 93       	push	r17
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	cd b7       	in	r28, 0x3d	; 61
 15e:	de b7       	in	r29, 0x3e	; 62
 160:	27 97       	sbiw	r28, 0x07	; 7
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	de bf       	out	0x3e, r29	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	cd bf       	out	0x3d, r28	; 61
 16c:	9e 83       	std	Y+6, r25	; 0x06
 16e:	8d 83       	std	Y+5, r24	; 0x05
 170:	6f 83       	std	Y+7, r22	; 0x07
	float analog_voltage = (digital_value * Vref) / ((1 << n) - 1);
 172:	8d 81       	ldd	r24, Y+5	; 0x05
 174:	9e 81       	ldd	r25, Y+6	; 0x06
 176:	cc 01       	movw	r24, r24
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	bc 01       	movw	r22, r24
 17e:	cd 01       	movw	r24, r26
 180:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__floatunsisf>
 184:	7b 01       	movw	r14, r22
 186:	8c 01       	movw	r16, r24
 188:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 18c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 190:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 194:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 198:	9c 01       	movw	r18, r24
 19a:	ad 01       	movw	r20, r26
 19c:	c8 01       	movw	r24, r16
 19e:	b7 01       	movw	r22, r14
 1a0:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__mulsf3>
 1a4:	dc 01       	movw	r26, r24
 1a6:	cb 01       	movw	r24, r22
 1a8:	6c 01       	movw	r12, r24
 1aa:	7d 01       	movw	r14, r26
 1ac:	8f 81       	ldd	r24, Y+7	; 0x07
 1ae:	28 2f       	mov	r18, r24
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <dac_convert+0x70>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	2a 95       	dec	r18
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <dac_convert+0x6c>
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	09 2e       	mov	r0, r25
 1c4:	00 0c       	add	r0, r0
 1c6:	aa 0b       	sbc	r26, r26
 1c8:	bb 0b       	sbc	r27, r27
 1ca:	bc 01       	movw	r22, r24
 1cc:	cd 01       	movw	r24, r26
 1ce:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__floatsisf>
 1d2:	dc 01       	movw	r26, r24
 1d4:	cb 01       	movw	r24, r22
 1d6:	9c 01       	movw	r18, r24
 1d8:	ad 01       	movw	r20, r26
 1da:	c7 01       	movw	r24, r14
 1dc:	b6 01       	movw	r22, r12
 1de:	0e 94 33 02 	call	0x466	; 0x466 <__divsf3>
 1e2:	dc 01       	movw	r26, r24
 1e4:	cb 01       	movw	r24, r22
 1e6:	89 83       	std	Y+1, r24	; 0x01
 1e8:	9a 83       	std	Y+2, r25	; 0x02
 1ea:	ab 83       	std	Y+3, r26	; 0x03
 1ec:	bc 83       	std	Y+4, r27	; 0x04
	return analog_voltage;
 1ee:	89 81       	ldd	r24, Y+1	; 0x01
 1f0:	9a 81       	ldd	r25, Y+2	; 0x02
 1f2:	ab 81       	ldd	r26, Y+3	; 0x03
 1f4:	bc 81       	ldd	r27, Y+4	; 0x04
}
 1f6:	bc 01       	movw	r22, r24
 1f8:	cd 01       	movw	r24, r26
 1fa:	27 96       	adiw	r28, 0x07	; 7
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	1f 91       	pop	r17
 20c:	0f 91       	pop	r16
 20e:	ff 90       	pop	r15
 210:	ef 90       	pop	r14
 212:	df 90       	pop	r13
 214:	cf 90       	pop	r12
 216:	08 95       	ret

00000218 <main>:
#include "adc.h"
#include "dac.h"

float Vref = 3.3;

int main(void) {
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	cd b7       	in	r28, 0x3d	; 61
 21e:	de b7       	in	r29, 0x3e	; 62
 220:	c2 59       	subi	r28, 0x92	; 146
 222:	d1 09       	sbc	r29, r1
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	f8 94       	cli
 228:	de bf       	out	0x3e, r29	; 62
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	cd bf       	out	0x3d, r28	; 61
	float analog[10] = {0.5, 1.2, 2.8, 3.1, 1.9, 0.7, 2.3, 1.5, 0.9, 3.0};
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	e4 e0       	ldi	r30, 0x04	; 4
 232:	f1 e0       	ldi	r31, 0x01	; 1
 234:	de 01       	movw	r26, r28
 236:	17 96       	adiw	r26, 0x07	; 7
 238:	01 90       	ld	r0, Z+
 23a:	0d 92       	st	X+, r0
 23c:	8a 95       	dec	r24
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x20>
	uint16_t digital[10];
	float converted_analog[10];
	uint8_t an = 14; 
 240:	8e e0       	ldi	r24, 0x0E	; 14
 242:	8d 83       	std	Y+5, r24	; 0x05
	uint8_t dn = 16;
 244:	80 e1       	ldi	r24, 0x10	; 16
 246:	8e 83       	std	Y+6, r24	; 0x06
	float error[10];

	for (int i = 0; i < 10; i++) {
 248:	1a 82       	std	Y+2, r1	; 0x02
 24a:	19 82       	std	Y+1, r1	; 0x01
 24c:	29 c0       	rjmp	.+82     	; 0x2a0 <main+0x88>
		digital[i] = adc_convert(analog[i], an);
 24e:	89 81       	ldd	r24, Y+1	; 0x01
 250:	9a 81       	ldd	r25, Y+2	; 0x02
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	9e 01       	movw	r18, r28
 25c:	2f 5f       	subi	r18, 0xFF	; 255
 25e:	3f 4f       	sbci	r19, 0xFF	; 255
 260:	82 0f       	add	r24, r18
 262:	93 1f       	adc	r25, r19
 264:	06 96       	adiw	r24, 0x06	; 6
 266:	fc 01       	movw	r30, r24
 268:	80 81       	ld	r24, Z
 26a:	91 81       	ldd	r25, Z+1	; 0x01
 26c:	a2 81       	ldd	r26, Z+2	; 0x02
 26e:	b3 81       	ldd	r27, Z+3	; 0x03
 270:	4d 81       	ldd	r20, Y+5	; 0x05
 272:	bc 01       	movw	r22, r24
 274:	cd 01       	movw	r24, r26
 276:	0e 94 4b 00 	call	0x96	; 0x96 <adc_convert>
 27a:	ac 01       	movw	r20, r24
 27c:	89 81       	ldd	r24, Y+1	; 0x01
 27e:	9a 81       	ldd	r25, Y+2	; 0x02
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	9e 01       	movw	r18, r28
 286:	2f 5f       	subi	r18, 0xFF	; 255
 288:	3f 4f       	sbci	r19, 0xFF	; 255
 28a:	82 0f       	add	r24, r18
 28c:	93 1f       	adc	r25, r19
 28e:	8e 96       	adiw	r24, 0x2e	; 46
 290:	fc 01       	movw	r30, r24
 292:	51 83       	std	Z+1, r21	; 0x01
 294:	40 83       	st	Z, r20
	float converted_analog[10];
	uint8_t an = 14; 
	uint8_t dn = 16;
	float error[10];

	for (int i = 0; i < 10; i++) {
 296:	89 81       	ldd	r24, Y+1	; 0x01
 298:	9a 81       	ldd	r25, Y+2	; 0x02
 29a:	01 96       	adiw	r24, 0x01	; 1
 29c:	9a 83       	std	Y+2, r25	; 0x02
 29e:	89 83       	std	Y+1, r24	; 0x01
 2a0:	89 81       	ldd	r24, Y+1	; 0x01
 2a2:	9a 81       	ldd	r25, Y+2	; 0x02
 2a4:	0a 97       	sbiw	r24, 0x0a	; 10
 2a6:	9c f2       	brlt	.-90     	; 0x24e <main+0x36>
		digital[i] = adc_convert(analog[i], an);
	}

	for (int i = 0; i < 10; i++) 
 2a8:	1c 82       	std	Y+4, r1	; 0x04
 2aa:	1b 82       	std	Y+3, r1	; 0x03
 2ac:	5e c0       	rjmp	.+188    	; 0x36a <main+0x152>
	{
		converted_analog[i] = dac_convert(digital[i], dn);
 2ae:	8b 81       	ldd	r24, Y+3	; 0x03
 2b0:	9c 81       	ldd	r25, Y+4	; 0x04
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	9e 01       	movw	r18, r28
 2b8:	2f 5f       	subi	r18, 0xFF	; 255
 2ba:	3f 4f       	sbci	r19, 0xFF	; 255
 2bc:	82 0f       	add	r24, r18
 2be:	93 1f       	adc	r25, r19
 2c0:	8e 96       	adiw	r24, 0x2e	; 46
 2c2:	fc 01       	movw	r30, r24
 2c4:	80 81       	ld	r24, Z
 2c6:	91 81       	ldd	r25, Z+1	; 0x01
 2c8:	6e 81       	ldd	r22, Y+6	; 0x06
 2ca:	0e 94 a6 00 	call	0x14c	; 0x14c <dac_convert>
 2ce:	dc 01       	movw	r26, r24
 2d0:	cb 01       	movw	r24, r22
 2d2:	ae 01       	movw	r20, r28
 2d4:	4d 5b       	subi	r20, 0xBD	; 189
 2d6:	5f 4f       	sbci	r21, 0xFF	; 255
 2d8:	2b 81       	ldd	r18, Y+3	; 0x03
 2da:	3c 81       	ldd	r19, Y+4	; 0x04
 2dc:	22 0f       	add	r18, r18
 2de:	33 1f       	adc	r19, r19
 2e0:	22 0f       	add	r18, r18
 2e2:	33 1f       	adc	r19, r19
 2e4:	24 0f       	add	r18, r20
 2e6:	35 1f       	adc	r19, r21
 2e8:	f9 01       	movw	r30, r18
 2ea:	80 83       	st	Z, r24
 2ec:	91 83       	std	Z+1, r25	; 0x01
 2ee:	a2 83       	std	Z+2, r26	; 0x02
 2f0:	b3 83       	std	Z+3, r27	; 0x03
		
		error[i] = analog[i] - converted_analog[i];
 2f2:	8b 81       	ldd	r24, Y+3	; 0x03
 2f4:	9c 81       	ldd	r25, Y+4	; 0x04
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	9e 01       	movw	r18, r28
 300:	2f 5f       	subi	r18, 0xFF	; 255
 302:	3f 4f       	sbci	r19, 0xFF	; 255
 304:	82 0f       	add	r24, r18
 306:	93 1f       	adc	r25, r19
 308:	06 96       	adiw	r24, 0x06	; 6
 30a:	fc 01       	movw	r30, r24
 30c:	80 81       	ld	r24, Z
 30e:	91 81       	ldd	r25, Z+1	; 0x01
 310:	a2 81       	ldd	r26, Z+2	; 0x02
 312:	b3 81       	ldd	r27, Z+3	; 0x03
 314:	ae 01       	movw	r20, r28
 316:	4d 5b       	subi	r20, 0xBD	; 189
 318:	5f 4f       	sbci	r21, 0xFF	; 255
 31a:	2b 81       	ldd	r18, Y+3	; 0x03
 31c:	3c 81       	ldd	r19, Y+4	; 0x04
 31e:	22 0f       	add	r18, r18
 320:	33 1f       	adc	r19, r19
 322:	22 0f       	add	r18, r18
 324:	33 1f       	adc	r19, r19
 326:	24 0f       	add	r18, r20
 328:	35 1f       	adc	r19, r21
 32a:	f9 01       	movw	r30, r18
 32c:	20 81       	ld	r18, Z
 32e:	31 81       	ldd	r19, Z+1	; 0x01
 330:	42 81       	ldd	r20, Z+2	; 0x02
 332:	53 81       	ldd	r21, Z+3	; 0x03
 334:	bc 01       	movw	r22, r24
 336:	cd 01       	movw	r24, r26
 338:	0e 94 c6 01 	call	0x38c	; 0x38c <__subsf3>
 33c:	dc 01       	movw	r26, r24
 33e:	cb 01       	movw	r24, r22
 340:	ae 01       	movw	r20, r28
 342:	45 59       	subi	r20, 0x95	; 149
 344:	5f 4f       	sbci	r21, 0xFF	; 255
 346:	2b 81       	ldd	r18, Y+3	; 0x03
 348:	3c 81       	ldd	r19, Y+4	; 0x04
 34a:	22 0f       	add	r18, r18
 34c:	33 1f       	adc	r19, r19
 34e:	22 0f       	add	r18, r18
 350:	33 1f       	adc	r19, r19
 352:	24 0f       	add	r18, r20
 354:	35 1f       	adc	r19, r21
 356:	f9 01       	movw	r30, r18
 358:	80 83       	st	Z, r24
 35a:	91 83       	std	Z+1, r25	; 0x01
 35c:	a2 83       	std	Z+2, r26	; 0x02
 35e:	b3 83       	std	Z+3, r27	; 0x03

	for (int i = 0; i < 10; i++) {
		digital[i] = adc_convert(analog[i], an);
	}

	for (int i = 0; i < 10; i++) 
 360:	8b 81       	ldd	r24, Y+3	; 0x03
 362:	9c 81       	ldd	r25, Y+4	; 0x04
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	9c 83       	std	Y+4, r25	; 0x04
 368:	8b 83       	std	Y+3, r24	; 0x03
 36a:	8b 81       	ldd	r24, Y+3	; 0x03
 36c:	9c 81       	ldd	r25, Y+4	; 0x04
 36e:	0a 97       	sbiw	r24, 0x0a	; 10
 370:	0c f4       	brge	.+2      	; 0x374 <main+0x15c>
 372:	9d cf       	rjmp	.-198    	; 0x2ae <main+0x96>
		converted_analog[i] = dac_convert(digital[i], dn);
		
		error[i] = analog[i] - converted_analog[i];
	}

	return 0;
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	90 e0       	ldi	r25, 0x00	; 0
}
 378:	ce 56       	subi	r28, 0x6E	; 110
 37a:	df 4f       	sbci	r29, 0xFF	; 255
 37c:	0f b6       	in	r0, 0x3f	; 63
 37e:	f8 94       	cli
 380:	de bf       	out	0x3e, r29	; 62
 382:	0f be       	out	0x3f, r0	; 63
 384:	cd bf       	out	0x3d, r28	; 61
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	08 95       	ret

0000038c <__subsf3>:
 38c:	50 58       	subi	r21, 0x80	; 128

0000038e <__addsf3>:
 38e:	bb 27       	eor	r27, r27
 390:	aa 27       	eor	r26, r26
 392:	0e 94 de 01 	call	0x3bc	; 0x3bc <__addsf3x>
 396:	0c 94 28 03 	jmp	0x650	; 0x650 <__fp_round>
 39a:	0e 94 1a 03 	call	0x634	; 0x634 <__fp_pscA>
 39e:	38 f0       	brcs	.+14     	; 0x3ae <__addsf3+0x20>
 3a0:	0e 94 21 03 	call	0x642	; 0x642 <__fp_pscB>
 3a4:	20 f0       	brcs	.+8      	; 0x3ae <__addsf3+0x20>
 3a6:	39 f4       	brne	.+14     	; 0x3b6 <__addsf3+0x28>
 3a8:	9f 3f       	cpi	r25, 0xFF	; 255
 3aa:	19 f4       	brne	.+6      	; 0x3b2 <__addsf3+0x24>
 3ac:	26 f4       	brtc	.+8      	; 0x3b6 <__addsf3+0x28>
 3ae:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_nan>
 3b2:	0e f4       	brtc	.+2      	; 0x3b6 <__addsf3+0x28>
 3b4:	e0 95       	com	r30
 3b6:	e7 fb       	bst	r30, 7
 3b8:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_inf>

000003bc <__addsf3x>:
 3bc:	e9 2f       	mov	r30, r25
 3be:	0e 94 39 03 	call	0x672	; 0x672 <__fp_split3>
 3c2:	58 f3       	brcs	.-42     	; 0x39a <__addsf3+0xc>
 3c4:	ba 17       	cp	r27, r26
 3c6:	62 07       	cpc	r22, r18
 3c8:	73 07       	cpc	r23, r19
 3ca:	84 07       	cpc	r24, r20
 3cc:	95 07       	cpc	r25, r21
 3ce:	20 f0       	brcs	.+8      	; 0x3d8 <__addsf3x+0x1c>
 3d0:	79 f4       	brne	.+30     	; 0x3f0 <__addsf3x+0x34>
 3d2:	a6 f5       	brtc	.+104    	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 3d4:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <__fp_zero>
 3d8:	0e f4       	brtc	.+2      	; 0x3dc <__addsf3x+0x20>
 3da:	e0 95       	com	r30
 3dc:	0b 2e       	mov	r0, r27
 3de:	ba 2f       	mov	r27, r26
 3e0:	a0 2d       	mov	r26, r0
 3e2:	0b 01       	movw	r0, r22
 3e4:	b9 01       	movw	r22, r18
 3e6:	90 01       	movw	r18, r0
 3e8:	0c 01       	movw	r0, r24
 3ea:	ca 01       	movw	r24, r20
 3ec:	a0 01       	movw	r20, r0
 3ee:	11 24       	eor	r1, r1
 3f0:	ff 27       	eor	r31, r31
 3f2:	59 1b       	sub	r21, r25
 3f4:	99 f0       	breq	.+38     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3f6:	59 3f       	cpi	r21, 0xF9	; 249
 3f8:	50 f4       	brcc	.+20     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3fa:	50 3e       	cpi	r21, 0xE0	; 224
 3fc:	68 f1       	brcs	.+90     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 3fe:	1a 16       	cp	r1, r26
 400:	f0 40       	sbci	r31, 0x00	; 0
 402:	a2 2f       	mov	r26, r18
 404:	23 2f       	mov	r18, r19
 406:	34 2f       	mov	r19, r20
 408:	44 27       	eor	r20, r20
 40a:	58 5f       	subi	r21, 0xF8	; 248
 40c:	f3 cf       	rjmp	.-26     	; 0x3f4 <__addsf3x+0x38>
 40e:	46 95       	lsr	r20
 410:	37 95       	ror	r19
 412:	27 95       	ror	r18
 414:	a7 95       	ror	r26
 416:	f0 40       	sbci	r31, 0x00	; 0
 418:	53 95       	inc	r21
 41a:	c9 f7       	brne	.-14     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 41c:	7e f4       	brtc	.+30     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 41e:	1f 16       	cp	r1, r31
 420:	ba 0b       	sbc	r27, r26
 422:	62 0b       	sbc	r22, r18
 424:	73 0b       	sbc	r23, r19
 426:	84 0b       	sbc	r24, r20
 428:	ba f0       	brmi	.+46     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 42a:	91 50       	subi	r25, 0x01	; 1
 42c:	a1 f0       	breq	.+40     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 42e:	ff 0f       	add	r31, r31
 430:	bb 1f       	adc	r27, r27
 432:	66 1f       	adc	r22, r22
 434:	77 1f       	adc	r23, r23
 436:	88 1f       	adc	r24, r24
 438:	c2 f7       	brpl	.-16     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 43a:	0e c0       	rjmp	.+28     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 43c:	ba 0f       	add	r27, r26
 43e:	62 1f       	adc	r22, r18
 440:	73 1f       	adc	r23, r19
 442:	84 1f       	adc	r24, r20
 444:	48 f4       	brcc	.+18     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 446:	87 95       	ror	r24
 448:	77 95       	ror	r23
 44a:	67 95       	ror	r22
 44c:	b7 95       	ror	r27
 44e:	f7 95       	ror	r31
 450:	9e 3f       	cpi	r25, 0xFE	; 254
 452:	08 f0       	brcs	.+2      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 454:	b0 cf       	rjmp	.-160    	; 0x3b6 <__addsf3+0x28>
 456:	93 95       	inc	r25
 458:	88 0f       	add	r24, r24
 45a:	08 f0       	brcs	.+2      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 45c:	99 27       	eor	r25, r25
 45e:	ee 0f       	add	r30, r30
 460:	97 95       	ror	r25
 462:	87 95       	ror	r24
 464:	08 95       	ret

00000466 <__divsf3>:
 466:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3x>
 46a:	0c 94 28 03 	jmp	0x650	; 0x650 <__fp_round>
 46e:	0e 94 21 03 	call	0x642	; 0x642 <__fp_pscB>
 472:	58 f0       	brcs	.+22     	; 0x48a <__divsf3+0x24>
 474:	0e 94 1a 03 	call	0x634	; 0x634 <__fp_pscA>
 478:	40 f0       	brcs	.+16     	; 0x48a <__divsf3+0x24>
 47a:	29 f4       	brne	.+10     	; 0x486 <__divsf3+0x20>
 47c:	5f 3f       	cpi	r21, 0xFF	; 255
 47e:	29 f0       	breq	.+10     	; 0x48a <__divsf3+0x24>
 480:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_inf>
 484:	51 11       	cpse	r21, r1
 486:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_szero>
 48a:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_nan>

0000048e <__divsf3x>:
 48e:	0e 94 39 03 	call	0x672	; 0x672 <__fp_split3>
 492:	68 f3       	brcs	.-38     	; 0x46e <__divsf3+0x8>

00000494 <__divsf3_pse>:
 494:	99 23       	and	r25, r25
 496:	b1 f3       	breq	.-20     	; 0x484 <__divsf3+0x1e>
 498:	55 23       	and	r21, r21
 49a:	91 f3       	breq	.-28     	; 0x480 <__divsf3+0x1a>
 49c:	95 1b       	sub	r25, r21
 49e:	55 0b       	sbc	r21, r21
 4a0:	bb 27       	eor	r27, r27
 4a2:	aa 27       	eor	r26, r26
 4a4:	62 17       	cp	r22, r18
 4a6:	73 07       	cpc	r23, r19
 4a8:	84 07       	cpc	r24, r20
 4aa:	38 f0       	brcs	.+14     	; 0x4ba <__divsf3_pse+0x26>
 4ac:	9f 5f       	subi	r25, 0xFF	; 255
 4ae:	5f 4f       	sbci	r21, 0xFF	; 255
 4b0:	22 0f       	add	r18, r18
 4b2:	33 1f       	adc	r19, r19
 4b4:	44 1f       	adc	r20, r20
 4b6:	aa 1f       	adc	r26, r26
 4b8:	a9 f3       	breq	.-22     	; 0x4a4 <__divsf3_pse+0x10>
 4ba:	35 d0       	rcall	.+106    	; 0x526 <__divsf3_pse+0x92>
 4bc:	0e 2e       	mov	r0, r30
 4be:	3a f0       	brmi	.+14     	; 0x4ce <__divsf3_pse+0x3a>
 4c0:	e0 e8       	ldi	r30, 0x80	; 128
 4c2:	32 d0       	rcall	.+100    	; 0x528 <__divsf3_pse+0x94>
 4c4:	91 50       	subi	r25, 0x01	; 1
 4c6:	50 40       	sbci	r21, 0x00	; 0
 4c8:	e6 95       	lsr	r30
 4ca:	00 1c       	adc	r0, r0
 4cc:	ca f7       	brpl	.-14     	; 0x4c0 <__divsf3_pse+0x2c>
 4ce:	2b d0       	rcall	.+86     	; 0x526 <__divsf3_pse+0x92>
 4d0:	fe 2f       	mov	r31, r30
 4d2:	29 d0       	rcall	.+82     	; 0x526 <__divsf3_pse+0x92>
 4d4:	66 0f       	add	r22, r22
 4d6:	77 1f       	adc	r23, r23
 4d8:	88 1f       	adc	r24, r24
 4da:	bb 1f       	adc	r27, r27
 4dc:	26 17       	cp	r18, r22
 4de:	37 07       	cpc	r19, r23
 4e0:	48 07       	cpc	r20, r24
 4e2:	ab 07       	cpc	r26, r27
 4e4:	b0 e8       	ldi	r27, 0x80	; 128
 4e6:	09 f0       	breq	.+2      	; 0x4ea <__divsf3_pse+0x56>
 4e8:	bb 0b       	sbc	r27, r27
 4ea:	80 2d       	mov	r24, r0
 4ec:	bf 01       	movw	r22, r30
 4ee:	ff 27       	eor	r31, r31
 4f0:	93 58       	subi	r25, 0x83	; 131
 4f2:	5f 4f       	sbci	r21, 0xFF	; 255
 4f4:	3a f0       	brmi	.+14     	; 0x504 <__divsf3_pse+0x70>
 4f6:	9e 3f       	cpi	r25, 0xFE	; 254
 4f8:	51 05       	cpc	r21, r1
 4fa:	78 f0       	brcs	.+30     	; 0x51a <__divsf3_pse+0x86>
 4fc:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_inf>
 500:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_szero>
 504:	5f 3f       	cpi	r21, 0xFF	; 255
 506:	e4 f3       	brlt	.-8      	; 0x500 <__divsf3_pse+0x6c>
 508:	98 3e       	cpi	r25, 0xE8	; 232
 50a:	d4 f3       	brlt	.-12     	; 0x500 <__divsf3_pse+0x6c>
 50c:	86 95       	lsr	r24
 50e:	77 95       	ror	r23
 510:	67 95       	ror	r22
 512:	b7 95       	ror	r27
 514:	f7 95       	ror	r31
 516:	9f 5f       	subi	r25, 0xFF	; 255
 518:	c9 f7       	brne	.-14     	; 0x50c <__divsf3_pse+0x78>
 51a:	88 0f       	add	r24, r24
 51c:	91 1d       	adc	r25, r1
 51e:	96 95       	lsr	r25
 520:	87 95       	ror	r24
 522:	97 f9       	bld	r25, 7
 524:	08 95       	ret
 526:	e1 e0       	ldi	r30, 0x01	; 1
 528:	66 0f       	add	r22, r22
 52a:	77 1f       	adc	r23, r23
 52c:	88 1f       	adc	r24, r24
 52e:	bb 1f       	adc	r27, r27
 530:	62 17       	cp	r22, r18
 532:	73 07       	cpc	r23, r19
 534:	84 07       	cpc	r24, r20
 536:	ba 07       	cpc	r27, r26
 538:	20 f0       	brcs	.+8      	; 0x542 <__divsf3_pse+0xae>
 53a:	62 1b       	sub	r22, r18
 53c:	73 0b       	sbc	r23, r19
 53e:	84 0b       	sbc	r24, r20
 540:	ba 0b       	sbc	r27, r26
 542:	ee 1f       	adc	r30, r30
 544:	88 f7       	brcc	.-30     	; 0x528 <__divsf3_pse+0x94>
 546:	e0 95       	com	r30
 548:	08 95       	ret

0000054a <__fixunssfsi>:
 54a:	0e 94 41 03 	call	0x682	; 0x682 <__fp_splitA>
 54e:	88 f0       	brcs	.+34     	; 0x572 <__fixunssfsi+0x28>
 550:	9f 57       	subi	r25, 0x7F	; 127
 552:	98 f0       	brcs	.+38     	; 0x57a <__fixunssfsi+0x30>
 554:	b9 2f       	mov	r27, r25
 556:	99 27       	eor	r25, r25
 558:	b7 51       	subi	r27, 0x17	; 23
 55a:	b0 f0       	brcs	.+44     	; 0x588 <__fixunssfsi+0x3e>
 55c:	e1 f0       	breq	.+56     	; 0x596 <__fixunssfsi+0x4c>
 55e:	66 0f       	add	r22, r22
 560:	77 1f       	adc	r23, r23
 562:	88 1f       	adc	r24, r24
 564:	99 1f       	adc	r25, r25
 566:	1a f0       	brmi	.+6      	; 0x56e <__fixunssfsi+0x24>
 568:	ba 95       	dec	r27
 56a:	c9 f7       	brne	.-14     	; 0x55e <__fixunssfsi+0x14>
 56c:	14 c0       	rjmp	.+40     	; 0x596 <__fixunssfsi+0x4c>
 56e:	b1 30       	cpi	r27, 0x01	; 1
 570:	91 f0       	breq	.+36     	; 0x596 <__fixunssfsi+0x4c>
 572:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <__fp_zero>
 576:	b1 e0       	ldi	r27, 0x01	; 1
 578:	08 95       	ret
 57a:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <__fp_zero>
 57e:	67 2f       	mov	r22, r23
 580:	78 2f       	mov	r23, r24
 582:	88 27       	eor	r24, r24
 584:	b8 5f       	subi	r27, 0xF8	; 248
 586:	39 f0       	breq	.+14     	; 0x596 <__fixunssfsi+0x4c>
 588:	b9 3f       	cpi	r27, 0xF9	; 249
 58a:	cc f3       	brlt	.-14     	; 0x57e <__fixunssfsi+0x34>
 58c:	86 95       	lsr	r24
 58e:	77 95       	ror	r23
 590:	67 95       	ror	r22
 592:	b3 95       	inc	r27
 594:	d9 f7       	brne	.-10     	; 0x58c <__fixunssfsi+0x42>
 596:	3e f4       	brtc	.+14     	; 0x5a6 <__fixunssfsi+0x5c>
 598:	90 95       	com	r25
 59a:	80 95       	com	r24
 59c:	70 95       	com	r23
 59e:	61 95       	neg	r22
 5a0:	7f 4f       	sbci	r23, 0xFF	; 255
 5a2:	8f 4f       	sbci	r24, 0xFF	; 255
 5a4:	9f 4f       	sbci	r25, 0xFF	; 255
 5a6:	08 95       	ret

000005a8 <__floatunsisf>:
 5a8:	e8 94       	clt
 5aa:	09 c0       	rjmp	.+18     	; 0x5be <__floatsisf+0x12>

000005ac <__floatsisf>:
 5ac:	97 fb       	bst	r25, 7
 5ae:	3e f4       	brtc	.+14     	; 0x5be <__floatsisf+0x12>
 5b0:	90 95       	com	r25
 5b2:	80 95       	com	r24
 5b4:	70 95       	com	r23
 5b6:	61 95       	neg	r22
 5b8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ba:	8f 4f       	sbci	r24, 0xFF	; 255
 5bc:	9f 4f       	sbci	r25, 0xFF	; 255
 5be:	99 23       	and	r25, r25
 5c0:	a9 f0       	breq	.+42     	; 0x5ec <__floatsisf+0x40>
 5c2:	f9 2f       	mov	r31, r25
 5c4:	96 e9       	ldi	r25, 0x96	; 150
 5c6:	bb 27       	eor	r27, r27
 5c8:	93 95       	inc	r25
 5ca:	f6 95       	lsr	r31
 5cc:	87 95       	ror	r24
 5ce:	77 95       	ror	r23
 5d0:	67 95       	ror	r22
 5d2:	b7 95       	ror	r27
 5d4:	f1 11       	cpse	r31, r1
 5d6:	f8 cf       	rjmp	.-16     	; 0x5c8 <__floatsisf+0x1c>
 5d8:	fa f4       	brpl	.+62     	; 0x618 <__floatsisf+0x6c>
 5da:	bb 0f       	add	r27, r27
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <__floatsisf+0x36>
 5de:	60 ff       	sbrs	r22, 0
 5e0:	1b c0       	rjmp	.+54     	; 0x618 <__floatsisf+0x6c>
 5e2:	6f 5f       	subi	r22, 0xFF	; 255
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	16 c0       	rjmp	.+44     	; 0x618 <__floatsisf+0x6c>
 5ec:	88 23       	and	r24, r24
 5ee:	11 f0       	breq	.+4      	; 0x5f4 <__floatsisf+0x48>
 5f0:	96 e9       	ldi	r25, 0x96	; 150
 5f2:	11 c0       	rjmp	.+34     	; 0x616 <__floatsisf+0x6a>
 5f4:	77 23       	and	r23, r23
 5f6:	21 f0       	breq	.+8      	; 0x600 <__floatsisf+0x54>
 5f8:	9e e8       	ldi	r25, 0x8E	; 142
 5fa:	87 2f       	mov	r24, r23
 5fc:	76 2f       	mov	r23, r22
 5fe:	05 c0       	rjmp	.+10     	; 0x60a <__floatsisf+0x5e>
 600:	66 23       	and	r22, r22
 602:	71 f0       	breq	.+28     	; 0x620 <__floatsisf+0x74>
 604:	96 e8       	ldi	r25, 0x86	; 134
 606:	86 2f       	mov	r24, r22
 608:	70 e0       	ldi	r23, 0x00	; 0
 60a:	60 e0       	ldi	r22, 0x00	; 0
 60c:	2a f0       	brmi	.+10     	; 0x618 <__floatsisf+0x6c>
 60e:	9a 95       	dec	r25
 610:	66 0f       	add	r22, r22
 612:	77 1f       	adc	r23, r23
 614:	88 1f       	adc	r24, r24
 616:	da f7       	brpl	.-10     	; 0x60e <__floatsisf+0x62>
 618:	88 0f       	add	r24, r24
 61a:	96 95       	lsr	r25
 61c:	87 95       	ror	r24
 61e:	97 f9       	bld	r25, 7
 620:	08 95       	ret

00000622 <__fp_inf>:
 622:	97 f9       	bld	r25, 7
 624:	9f 67       	ori	r25, 0x7F	; 127
 626:	80 e8       	ldi	r24, 0x80	; 128
 628:	70 e0       	ldi	r23, 0x00	; 0
 62a:	60 e0       	ldi	r22, 0x00	; 0
 62c:	08 95       	ret

0000062e <__fp_nan>:
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	80 ec       	ldi	r24, 0xC0	; 192
 632:	08 95       	ret

00000634 <__fp_pscA>:
 634:	00 24       	eor	r0, r0
 636:	0a 94       	dec	r0
 638:	16 16       	cp	r1, r22
 63a:	17 06       	cpc	r1, r23
 63c:	18 06       	cpc	r1, r24
 63e:	09 06       	cpc	r0, r25
 640:	08 95       	ret

00000642 <__fp_pscB>:
 642:	00 24       	eor	r0, r0
 644:	0a 94       	dec	r0
 646:	12 16       	cp	r1, r18
 648:	13 06       	cpc	r1, r19
 64a:	14 06       	cpc	r1, r20
 64c:	05 06       	cpc	r0, r21
 64e:	08 95       	ret

00000650 <__fp_round>:
 650:	09 2e       	mov	r0, r25
 652:	03 94       	inc	r0
 654:	00 0c       	add	r0, r0
 656:	11 f4       	brne	.+4      	; 0x65c <__fp_round+0xc>
 658:	88 23       	and	r24, r24
 65a:	52 f0       	brmi	.+20     	; 0x670 <__fp_round+0x20>
 65c:	bb 0f       	add	r27, r27
 65e:	40 f4       	brcc	.+16     	; 0x670 <__fp_round+0x20>
 660:	bf 2b       	or	r27, r31
 662:	11 f4       	brne	.+4      	; 0x668 <__fp_round+0x18>
 664:	60 ff       	sbrs	r22, 0
 666:	04 c0       	rjmp	.+8      	; 0x670 <__fp_round+0x20>
 668:	6f 5f       	subi	r22, 0xFF	; 255
 66a:	7f 4f       	sbci	r23, 0xFF	; 255
 66c:	8f 4f       	sbci	r24, 0xFF	; 255
 66e:	9f 4f       	sbci	r25, 0xFF	; 255
 670:	08 95       	ret

00000672 <__fp_split3>:
 672:	57 fd       	sbrc	r21, 7
 674:	90 58       	subi	r25, 0x80	; 128
 676:	44 0f       	add	r20, r20
 678:	55 1f       	adc	r21, r21
 67a:	59 f0       	breq	.+22     	; 0x692 <__fp_splitA+0x10>
 67c:	5f 3f       	cpi	r21, 0xFF	; 255
 67e:	71 f0       	breq	.+28     	; 0x69c <__fp_splitA+0x1a>
 680:	47 95       	ror	r20

00000682 <__fp_splitA>:
 682:	88 0f       	add	r24, r24
 684:	97 fb       	bst	r25, 7
 686:	99 1f       	adc	r25, r25
 688:	61 f0       	breq	.+24     	; 0x6a2 <__fp_splitA+0x20>
 68a:	9f 3f       	cpi	r25, 0xFF	; 255
 68c:	79 f0       	breq	.+30     	; 0x6ac <__fp_splitA+0x2a>
 68e:	87 95       	ror	r24
 690:	08 95       	ret
 692:	12 16       	cp	r1, r18
 694:	13 06       	cpc	r1, r19
 696:	14 06       	cpc	r1, r20
 698:	55 1f       	adc	r21, r21
 69a:	f2 cf       	rjmp	.-28     	; 0x680 <__fp_split3+0xe>
 69c:	46 95       	lsr	r20
 69e:	f1 df       	rcall	.-30     	; 0x682 <__fp_splitA>
 6a0:	08 c0       	rjmp	.+16     	; 0x6b2 <__fp_splitA+0x30>
 6a2:	16 16       	cp	r1, r22
 6a4:	17 06       	cpc	r1, r23
 6a6:	18 06       	cpc	r1, r24
 6a8:	99 1f       	adc	r25, r25
 6aa:	f1 cf       	rjmp	.-30     	; 0x68e <__fp_splitA+0xc>
 6ac:	86 95       	lsr	r24
 6ae:	71 05       	cpc	r23, r1
 6b0:	61 05       	cpc	r22, r1
 6b2:	08 94       	sec
 6b4:	08 95       	ret

000006b6 <__fp_zero>:
 6b6:	e8 94       	clt

000006b8 <__fp_szero>:
 6b8:	bb 27       	eor	r27, r27
 6ba:	66 27       	eor	r22, r22
 6bc:	77 27       	eor	r23, r23
 6be:	cb 01       	movw	r24, r22
 6c0:	97 f9       	bld	r25, 7
 6c2:	08 95       	ret

000006c4 <__mulsf3>:
 6c4:	0e 94 75 03 	call	0x6ea	; 0x6ea <__mulsf3x>
 6c8:	0c 94 28 03 	jmp	0x650	; 0x650 <__fp_round>
 6cc:	0e 94 1a 03 	call	0x634	; 0x634 <__fp_pscA>
 6d0:	38 f0       	brcs	.+14     	; 0x6e0 <__mulsf3+0x1c>
 6d2:	0e 94 21 03 	call	0x642	; 0x642 <__fp_pscB>
 6d6:	20 f0       	brcs	.+8      	; 0x6e0 <__mulsf3+0x1c>
 6d8:	95 23       	and	r25, r21
 6da:	11 f0       	breq	.+4      	; 0x6e0 <__mulsf3+0x1c>
 6dc:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_inf>
 6e0:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_nan>
 6e4:	11 24       	eor	r1, r1
 6e6:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_szero>

000006ea <__mulsf3x>:
 6ea:	0e 94 39 03 	call	0x672	; 0x672 <__fp_split3>
 6ee:	70 f3       	brcs	.-36     	; 0x6cc <__mulsf3+0x8>

000006f0 <__mulsf3_pse>:
 6f0:	95 9f       	mul	r25, r21
 6f2:	c1 f3       	breq	.-16     	; 0x6e4 <__mulsf3+0x20>
 6f4:	95 0f       	add	r25, r21
 6f6:	50 e0       	ldi	r21, 0x00	; 0
 6f8:	55 1f       	adc	r21, r21
 6fa:	62 9f       	mul	r22, r18
 6fc:	f0 01       	movw	r30, r0
 6fe:	72 9f       	mul	r23, r18
 700:	bb 27       	eor	r27, r27
 702:	f0 0d       	add	r31, r0
 704:	b1 1d       	adc	r27, r1
 706:	63 9f       	mul	r22, r19
 708:	aa 27       	eor	r26, r26
 70a:	f0 0d       	add	r31, r0
 70c:	b1 1d       	adc	r27, r1
 70e:	aa 1f       	adc	r26, r26
 710:	64 9f       	mul	r22, r20
 712:	66 27       	eor	r22, r22
 714:	b0 0d       	add	r27, r0
 716:	a1 1d       	adc	r26, r1
 718:	66 1f       	adc	r22, r22
 71a:	82 9f       	mul	r24, r18
 71c:	22 27       	eor	r18, r18
 71e:	b0 0d       	add	r27, r0
 720:	a1 1d       	adc	r26, r1
 722:	62 1f       	adc	r22, r18
 724:	73 9f       	mul	r23, r19
 726:	b0 0d       	add	r27, r0
 728:	a1 1d       	adc	r26, r1
 72a:	62 1f       	adc	r22, r18
 72c:	83 9f       	mul	r24, r19
 72e:	a0 0d       	add	r26, r0
 730:	61 1d       	adc	r22, r1
 732:	22 1f       	adc	r18, r18
 734:	74 9f       	mul	r23, r20
 736:	33 27       	eor	r19, r19
 738:	a0 0d       	add	r26, r0
 73a:	61 1d       	adc	r22, r1
 73c:	23 1f       	adc	r18, r19
 73e:	84 9f       	mul	r24, r20
 740:	60 0d       	add	r22, r0
 742:	21 1d       	adc	r18, r1
 744:	82 2f       	mov	r24, r18
 746:	76 2f       	mov	r23, r22
 748:	6a 2f       	mov	r22, r26
 74a:	11 24       	eor	r1, r1
 74c:	9f 57       	subi	r25, 0x7F	; 127
 74e:	50 40       	sbci	r21, 0x00	; 0
 750:	9a f0       	brmi	.+38     	; 0x778 <__mulsf3_pse+0x88>
 752:	f1 f0       	breq	.+60     	; 0x790 <__mulsf3_pse+0xa0>
 754:	88 23       	and	r24, r24
 756:	4a f0       	brmi	.+18     	; 0x76a <__mulsf3_pse+0x7a>
 758:	ee 0f       	add	r30, r30
 75a:	ff 1f       	adc	r31, r31
 75c:	bb 1f       	adc	r27, r27
 75e:	66 1f       	adc	r22, r22
 760:	77 1f       	adc	r23, r23
 762:	88 1f       	adc	r24, r24
 764:	91 50       	subi	r25, 0x01	; 1
 766:	50 40       	sbci	r21, 0x00	; 0
 768:	a9 f7       	brne	.-22     	; 0x754 <__mulsf3_pse+0x64>
 76a:	9e 3f       	cpi	r25, 0xFE	; 254
 76c:	51 05       	cpc	r21, r1
 76e:	80 f0       	brcs	.+32     	; 0x790 <__mulsf3_pse+0xa0>
 770:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_inf>
 774:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_szero>
 778:	5f 3f       	cpi	r21, 0xFF	; 255
 77a:	e4 f3       	brlt	.-8      	; 0x774 <__mulsf3_pse+0x84>
 77c:	98 3e       	cpi	r25, 0xE8	; 232
 77e:	d4 f3       	brlt	.-12     	; 0x774 <__mulsf3_pse+0x84>
 780:	86 95       	lsr	r24
 782:	77 95       	ror	r23
 784:	67 95       	ror	r22
 786:	b7 95       	ror	r27
 788:	f7 95       	ror	r31
 78a:	e7 95       	ror	r30
 78c:	9f 5f       	subi	r25, 0xFF	; 255
 78e:	c1 f7       	brne	.-16     	; 0x780 <__mulsf3_pse+0x90>
 790:	fe 2b       	or	r31, r30
 792:	88 0f       	add	r24, r24
 794:	91 1d       	adc	r25, r1
 796:	96 95       	lsr	r25
 798:	87 95       	ror	r24
 79a:	97 f9       	bld	r25, 7
 79c:	08 95       	ret

0000079e <_exit>:
 79e:	f8 94       	cli

000007a0 <__stop_program>:
 7a0:	ff cf       	rjmp	.-2      	; 0x7a0 <__stop_program>
