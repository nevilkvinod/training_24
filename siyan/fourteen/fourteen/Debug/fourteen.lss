
fourteen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  000001e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000168  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000a  00004168  00000168  000001dc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .comment      00000030  00000000  00000000  000001e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000218  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023ec  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000021b4  00000000  00000000  00002684  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000023c  00000000  00000000  00004838  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00004a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001035  00000000  00000000  00004adc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000008e  00000000  00000000  00005b11  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00005b9f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  68:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  6c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  70:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  74:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  78:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  7c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  80:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  84:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  88:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  8c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	0e 94 8c 00 	call	0x118	; 0x118 <main>
  a0:	0c 94 b2 00 	jmp	0x164	; 0x164 <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <found>:
 *
 * Created: 31-07-2024 10:51:14
 *  Author: Siyan Ananth A
 */ 

int found(int a,int *arr){
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
  b0:	28 97       	sbiw	r28, 0x08	; 8
  b2:	cd bf       	out	0x3d, r28	; 61
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	8d 83       	std	Y+5, r24	; 0x05
  b8:	9e 83       	std	Y+6, r25	; 0x06
  ba:	6f 83       	std	Y+7, r22	; 0x07
  bc:	78 87       	std	Y+8, r23	; 0x08
	int find;
	for(int i=0;i<5;i++){
  be:	1b 82       	std	Y+3, r1	; 0x03
  c0:	1c 82       	std	Y+4, r1	; 0x04
  c2:	1e c0       	rjmp	.+60     	; 0x100 <__EEPROM_REGION_LENGTH__>
		
		if(arr[i]==a){
  c4:	8b 81       	ldd	r24, Y+3	; 0x03
  c6:	9c 81       	ldd	r25, Y+4	; 0x04
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	2f 81       	ldd	r18, Y+7	; 0x07
  ce:	38 85       	ldd	r19, Y+8	; 0x08
  d0:	82 0f       	add	r24, r18
  d2:	93 1f       	adc	r25, r19
  d4:	fc 01       	movw	r30, r24
  d6:	20 81       	ld	r18, Z
  d8:	31 81       	ldd	r19, Z+1	; 0x01
  da:	8d 81       	ldd	r24, Y+5	; 0x05
  dc:	9e 81       	ldd	r25, Y+6	; 0x06
  de:	28 17       	cp	r18, r24
  e0:	39 07       	cpc	r19, r25
  e2:	29 f4       	brne	.+10     	; 0xee <found+0x46>
			find=i;
  e4:	8b 81       	ldd	r24, Y+3	; 0x03
  e6:	9c 81       	ldd	r25, Y+4	; 0x04
  e8:	89 83       	std	Y+1, r24	; 0x01
  ea:	9a 83       	std	Y+2, r25	; 0x02
			break;
  ec:	0d c0       	rjmp	.+26     	; 0x108 <__EEPROM_REGION_LENGTH__+0x8>
		}
		
		else{
			find=-1;
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	9f ef       	ldi	r25, 0xFF	; 255
  f2:	89 83       	std	Y+1, r24	; 0x01
  f4:	9a 83       	std	Y+2, r25	; 0x02
 *  Author: Siyan Ananth A
 */ 

int found(int a,int *arr){
	int find;
	for(int i=0;i<5;i++){
  f6:	8b 81       	ldd	r24, Y+3	; 0x03
  f8:	9c 81       	ldd	r25, Y+4	; 0x04
  fa:	01 96       	adiw	r24, 0x01	; 1
  fc:	8b 83       	std	Y+3, r24	; 0x03
  fe:	9c 83       	std	Y+4, r25	; 0x04
 100:	8b 81       	ldd	r24, Y+3	; 0x03
 102:	9c 81       	ldd	r25, Y+4	; 0x04
 104:	05 97       	sbiw	r24, 0x05	; 5
 106:	f4 f2       	brlt	.-68     	; 0xc4 <found+0x1c>
		else{
			find=-1;
		}
	}
	
	return find;
 108:	89 81       	ldd	r24, Y+1	; 0x01
 10a:	9a 81       	ldd	r25, Y+2	; 0x02
 10c:	28 96       	adiw	r28, 0x08	; 8
 10e:	cd bf       	out	0x3d, r28	; 61
 110:	de bf       	out	0x3e, r29	; 62
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	08 95       	ret

00000118 <main>:

#include <avr/io.h>
int found(int, int);

int main(void)
{
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	cd b7       	in	r28, 0x3d	; 61
 11e:	de b7       	in	r29, 0x3e	; 62
 120:	2e 97       	sbiw	r28, 0x0e	; 14
 122:	cd bf       	out	0x3d, r28	; 61
 124:	de bf       	out	0x3e, r29	; 62
    int arr[5]={1,2,3,4,5};
 126:	8a e0       	ldi	r24, 0x0A	; 10
 128:	e8 e6       	ldi	r30, 0x68	; 104
 12a:	f1 e4       	ldi	r31, 0x41	; 65
 12c:	de 01       	movw	r26, r28
 12e:	15 96       	adiw	r26, 0x05	; 5
 130:	01 90       	ld	r0, Z+
 132:	0d 92       	st	X+, r0
 134:	8a 95       	dec	r24
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0x18>
	int element=2;
 138:	82 e0       	ldi	r24, 0x02	; 2
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	89 83       	std	Y+1, r24	; 0x01
 13e:	9a 83       	std	Y+2, r25	; 0x02
	int a=found(element,arr);
 140:	9e 01       	movw	r18, r28
 142:	2b 5f       	subi	r18, 0xFB	; 251
 144:	3f 4f       	sbci	r19, 0xFF	; 255
 146:	89 81       	ldd	r24, Y+1	; 0x01
 148:	9a 81       	ldd	r25, Y+2	; 0x02
 14a:	b9 01       	movw	r22, r18
 14c:	0e 94 54 00 	call	0xa8	; 0xa8 <found>
 150:	8b 83       	std	Y+3, r24	; 0x03
 152:	9c 83       	std	Y+4, r25	; 0x04
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
}
 158:	2e 96       	adiw	r28, 0x0e	; 14
 15a:	cd bf       	out	0x3d, r28	; 61
 15c:	de bf       	out	0x3e, r29	; 62
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <_exit>:
 164:	f8 94       	cli

00000166 <__stop_program>:
 166:	ff cf       	rjmp	.-2      	; 0x166 <__stop_program>
