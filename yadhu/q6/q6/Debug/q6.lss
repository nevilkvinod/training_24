
q6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00802800  00000836  000008ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000080e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  0000480e  0000080e  000008a2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .comment      00000030  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  0000093c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002574  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000022a8  00000000  00000000  00002f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002f5  00000000  00000000  000051d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  000054d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000107c  00000000  00000000  000055c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000184  00000000  00000000  00006644  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000067c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  8c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
  9c:	18 e2       	ldi	r17, 0x28	; 40
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b8 e2       	ldi	r27, 0x28	; 40
  a2:	e6 e3       	ldi	r30, 0x36	; 54
  a4:	f8 e0       	ldi	r31, 0x08	; 8
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
  a8:	05 90       	lpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>
  b2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <main>
  b6:	0c 94 05 04 	jmp	0x80a	; 0x80a <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <adc>:
 *  Author: YADHU KRISHNA T
 */ 
long power(int,int);

int adc(float analog,int resol)
{
  be:	cf 92       	push	r12
  c0:	df 92       	push	r13
  c2:	ef 92       	push	r14
  c4:	ff 92       	push	r15
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	2c 97       	sbiw	r28, 0x0c	; 12
  d0:	cd bf       	out	0x3d, r28	; 61
  d2:	de bf       	out	0x3e, r29	; 62
  d4:	6f 83       	std	Y+7, r22	; 0x07
  d6:	78 87       	std	Y+8, r23	; 0x08
  d8:	89 87       	std	Y+9, r24	; 0x09
  da:	9a 87       	std	Y+10, r25	; 0x0a
  dc:	4b 87       	std	Y+11, r20	; 0x0b
  de:	5c 87       	std	Y+12, r21	; 0x0c
		extern int vref;
	int digital;
	long conv=(power(2,resol))-1;
  e0:	8b 85       	ldd	r24, Y+11	; 0x0b
  e2:	9c 85       	ldd	r25, Y+12	; 0x0c
  e4:	bc 01       	movw	r22, r24
  e6:	82 e0       	ldi	r24, 0x02	; 2
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	0e 94 be 00 	call	0x17c	; 0x17c <power>
  ee:	dc 01       	movw	r26, r24
  f0:	cb 01       	movw	r24, r22
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	a1 09       	sbc	r26, r1
  f6:	b1 09       	sbc	r27, r1
  f8:	89 83       	std	Y+1, r24	; 0x01
  fa:	9a 83       	std	Y+2, r25	; 0x02
  fc:	ab 83       	std	Y+3, r26	; 0x03
  fe:	bc 83       	std	Y+4, r27	; 0x04
	digital=(analog*conv)/vref;
 100:	69 81       	ldd	r22, Y+1	; 0x01
 102:	7a 81       	ldd	r23, Y+2	; 0x02
 104:	8b 81       	ldd	r24, Y+3	; 0x03
 106:	9c 81       	ldd	r25, Y+4	; 0x04
 108:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__floatsisf>
 10c:	dc 01       	movw	r26, r24
 10e:	cb 01       	movw	r24, r22
 110:	2f 81       	ldd	r18, Y+7	; 0x07
 112:	38 85       	ldd	r19, Y+8	; 0x08
 114:	49 85       	ldd	r20, Y+9	; 0x09
 116:	5a 85       	ldd	r21, Y+10	; 0x0a
 118:	bc 01       	movw	r22, r24
 11a:	cd 01       	movw	r24, r26
 11c:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__mulsf3>
 120:	dc 01       	movw	r26, r24
 122:	cb 01       	movw	r24, r22
 124:	6c 01       	movw	r12, r24
 126:	7d 01       	movw	r14, r26
 128:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 12c:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 130:	09 2e       	mov	r0, r25
 132:	00 0c       	add	r0, r0
 134:	aa 0b       	sbc	r26, r26
 136:	bb 0b       	sbc	r27, r27
 138:	bc 01       	movw	r22, r24
 13a:	cd 01       	movw	r24, r26
 13c:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__floatsisf>
 140:	dc 01       	movw	r26, r24
 142:	cb 01       	movw	r24, r22
 144:	9c 01       	movw	r18, r24
 146:	ad 01       	movw	r20, r26
 148:	c7 01       	movw	r24, r14
 14a:	b6 01       	movw	r22, r12
 14c:	0e 94 38 02 	call	0x470	; 0x470 <__divsf3>
 150:	dc 01       	movw	r26, r24
 152:	cb 01       	movw	r24, r22
 154:	bc 01       	movw	r22, r24
 156:	cd 01       	movw	r24, r26
 158:	0e 94 aa 02 	call	0x554	; 0x554 <__fixsfsi>
 15c:	dc 01       	movw	r26, r24
 15e:	cb 01       	movw	r24, r22
 160:	8d 83       	std	Y+5, r24	; 0x05
 162:	9e 83       	std	Y+6, r25	; 0x06
	return digital;
 164:	8d 81       	ldd	r24, Y+5	; 0x05
 166:	9e 81       	ldd	r25, Y+6	; 0x06
 168:	2c 96       	adiw	r28, 0x0c	; 12
 16a:	cd bf       	out	0x3d, r28	; 61
 16c:	de bf       	out	0x3e, r29	; 62
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	ff 90       	pop	r15
 174:	ef 90       	pop	r14
 176:	df 90       	pop	r13
 178:	cf 90       	pop	r12
 17a:	08 95       	ret

0000017c <power>:
 *
 * Created: 31-07-2024 16:52:44
 *  Author: YADHU KRISHNA T
 */
long power(int a,int b)
{
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62
 184:	28 97       	sbiw	r28, 0x08	; 8
 186:	cd bf       	out	0x3d, r28	; 61
 188:	de bf       	out	0x3e, r29	; 62
 18a:	8d 83       	std	Y+5, r24	; 0x05
 18c:	9e 83       	std	Y+6, r25	; 0x06
 18e:	6f 83       	std	Y+7, r22	; 0x07
 190:	78 87       	std	Y+8, r23	; 0x08
     long p=1;
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	a0 e0       	ldi	r26, 0x00	; 0
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	89 83       	std	Y+1, r24	; 0x01
 19c:	9a 83       	std	Y+2, r25	; 0x02
 19e:	ab 83       	std	Y+3, r26	; 0x03
 1a0:	bc 83       	std	Y+4, r27	; 0x04
	 
	while(b!=0)
 1a2:	19 c0       	rjmp	.+50     	; 0x1d6 <power+0x5a>
	{
		p=p*a;
 1a4:	8d 81       	ldd	r24, Y+5	; 0x05
 1a6:	9e 81       	ldd	r25, Y+6	; 0x06
 1a8:	09 2e       	mov	r0, r25
 1aa:	00 0c       	add	r0, r0
 1ac:	aa 0b       	sbc	r26, r26
 1ae:	bb 0b       	sbc	r27, r27
 1b0:	29 81       	ldd	r18, Y+1	; 0x01
 1b2:	3a 81       	ldd	r19, Y+2	; 0x02
 1b4:	4b 81       	ldd	r20, Y+3	; 0x03
 1b6:	5c 81       	ldd	r21, Y+4	; 0x04
 1b8:	bc 01       	movw	r22, r24
 1ba:	cd 01       	movw	r24, r26
 1bc:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__mulsi3>
 1c0:	dc 01       	movw	r26, r24
 1c2:	cb 01       	movw	r24, r22
 1c4:	89 83       	std	Y+1, r24	; 0x01
 1c6:	9a 83       	std	Y+2, r25	; 0x02
 1c8:	ab 83       	std	Y+3, r26	; 0x03
 1ca:	bc 83       	std	Y+4, r27	; 0x04
		b--;
 1cc:	8f 81       	ldd	r24, Y+7	; 0x07
 1ce:	98 85       	ldd	r25, Y+8	; 0x08
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	8f 83       	std	Y+7, r24	; 0x07
 1d4:	98 87       	std	Y+8, r25	; 0x08
 */
long power(int a,int b)
{
     long p=1;
	 
	while(b!=0)
 1d6:	8f 81       	ldd	r24, Y+7	; 0x07
 1d8:	98 85       	ldd	r25, Y+8	; 0x08
 1da:	89 2b       	or	r24, r25
 1dc:	19 f7       	brne	.-58     	; 0x1a4 <power+0x28>
	{
		p=p*a;
		b--;
	}
	return p;
 1de:	89 81       	ldd	r24, Y+1	; 0x01
 1e0:	9a 81       	ldd	r25, Y+2	; 0x02
 1e2:	ab 81       	ldd	r26, Y+3	; 0x03
 1e4:	bc 81       	ldd	r27, Y+4	; 0x04
 1e6:	bc 01       	movw	r22, r24
 1e8:	cd 01       	movw	r24, r26
 1ea:	28 96       	adiw	r28, 0x08	; 8
 1ec:	cd bf       	out	0x3d, r28	; 61
 1ee:	de bf       	out	0x3e, r29	; 62
 1f0:	df 91       	pop	r29
 1f2:	cf 91       	pop	r28
 1f4:	08 95       	ret

000001f6 <dac>:
 * Created: 31-07-2024 17:06:05
 *  Author: YADHU KRISHNA T
 */ 
long power(int,int);
float dac(int digival,int resol)
{
 1f6:	cf 92       	push	r12
 1f8:	df 92       	push	r13
 1fa:	ef 92       	push	r14
 1fc:	ff 92       	push	r15
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	cd b7       	in	r28, 0x3d	; 61
 204:	de b7       	in	r29, 0x3e	; 62
 206:	2c 97       	sbiw	r28, 0x0c	; 12
 208:	cd bf       	out	0x3d, r28	; 61
 20a:	de bf       	out	0x3e, r29	; 62
 20c:	89 87       	std	Y+9, r24	; 0x09
 20e:	9a 87       	std	Y+10, r25	; 0x0a
 210:	6b 87       	std	Y+11, r22	; 0x0b
 212:	7c 87       	std	Y+12, r23	; 0x0c
	extern int vref;
	long conv=(power(2,resol)-1);
 214:	8b 85       	ldd	r24, Y+11	; 0x0b
 216:	9c 85       	ldd	r25, Y+12	; 0x0c
 218:	bc 01       	movw	r22, r24
 21a:	82 e0       	ldi	r24, 0x02	; 2
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0e 94 be 00 	call	0x17c	; 0x17c <power>
 222:	dc 01       	movw	r26, r24
 224:	cb 01       	movw	r24, r22
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	a1 09       	sbc	r26, r1
 22a:	b1 09       	sbc	r27, r1
 22c:	89 83       	std	Y+1, r24	; 0x01
 22e:	9a 83       	std	Y+2, r25	; 0x02
 230:	ab 83       	std	Y+3, r26	; 0x03
 232:	bc 83       	std	Y+4, r27	; 0x04
	float analog=((float)digival * vref)/conv;
 234:	89 85       	ldd	r24, Y+9	; 0x09
 236:	9a 85       	ldd	r25, Y+10	; 0x0a
 238:	09 2e       	mov	r0, r25
 23a:	00 0c       	add	r0, r0
 23c:	aa 0b       	sbc	r26, r26
 23e:	bb 0b       	sbc	r27, r27
 240:	bc 01       	movw	r22, r24
 242:	cd 01       	movw	r24, r26
 244:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__floatsisf>
 248:	6b 01       	movw	r12, r22
 24a:	7c 01       	movw	r14, r24
 24c:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 250:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 254:	09 2e       	mov	r0, r25
 256:	00 0c       	add	r0, r0
 258:	aa 0b       	sbc	r26, r26
 25a:	bb 0b       	sbc	r27, r27
 25c:	bc 01       	movw	r22, r24
 25e:	cd 01       	movw	r24, r26
 260:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__floatsisf>
 264:	dc 01       	movw	r26, r24
 266:	cb 01       	movw	r24, r22
 268:	9c 01       	movw	r18, r24
 26a:	ad 01       	movw	r20, r26
 26c:	c7 01       	movw	r24, r14
 26e:	b6 01       	movw	r22, r12
 270:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__mulsf3>
 274:	dc 01       	movw	r26, r24
 276:	cb 01       	movw	r24, r22
 278:	6c 01       	movw	r12, r24
 27a:	7d 01       	movw	r14, r26
 27c:	69 81       	ldd	r22, Y+1	; 0x01
 27e:	7a 81       	ldd	r23, Y+2	; 0x02
 280:	8b 81       	ldd	r24, Y+3	; 0x03
 282:	9c 81       	ldd	r25, Y+4	; 0x04
 284:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__floatsisf>
 288:	dc 01       	movw	r26, r24
 28a:	cb 01       	movw	r24, r22
 28c:	9c 01       	movw	r18, r24
 28e:	ad 01       	movw	r20, r26
 290:	c7 01       	movw	r24, r14
 292:	b6 01       	movw	r22, r12
 294:	0e 94 38 02 	call	0x470	; 0x470 <__divsf3>
 298:	dc 01       	movw	r26, r24
 29a:	cb 01       	movw	r24, r22
 29c:	8d 83       	std	Y+5, r24	; 0x05
 29e:	9e 83       	std	Y+6, r25	; 0x06
 2a0:	af 83       	std	Y+7, r26	; 0x07
 2a2:	b8 87       	std	Y+8, r27	; 0x08
	return analog;
 2a4:	8d 81       	ldd	r24, Y+5	; 0x05
 2a6:	9e 81       	ldd	r25, Y+6	; 0x06
 2a8:	af 81       	ldd	r26, Y+7	; 0x07
 2aa:	b8 85       	ldd	r27, Y+8	; 0x08
}
 2ac:	bc 01       	movw	r22, r24
 2ae:	cd 01       	movw	r24, r26
 2b0:	2c 96       	adiw	r28, 0x0c	; 12
 2b2:	cd bf       	out	0x3d, r28	; 61
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	ff 90       	pop	r15
 2bc:	ef 90       	pop	r14
 2be:	df 90       	pop	r13
 2c0:	cf 90       	pop	r12
 2c2:	08 95       	ret

000002c4 <main>:
long power(int,int);
extern int vref=5;
int adc(float,int);
float dac(int,int);
int main(void)
{
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
 2cc:	e4 97       	sbiw	r28, 0x34	; 52
 2ce:	cd bf       	out	0x3d, r28	; 61
 2d0:	de bf       	out	0x3e, r29	; 62
	float a[10]={0.6,0.8,1.2,1.5,1.8,1.9,2.7,3.1,3.22,3.3};
 2d2:	88 e2       	ldi	r24, 0x28	; 40
 2d4:	ee e0       	ldi	r30, 0x0E	; 14
 2d6:	f8 e4       	ldi	r31, 0x48	; 72
 2d8:	de 01       	movw	r26, r28
 2da:	1d 96       	adiw	r26, 0x0d	; 13
 2dc:	01 90       	ld	r0, Z+
 2de:	0d 92       	st	X+, r0
 2e0:	8a 95       	dec	r24
 2e2:	e1 f7       	brne	.-8      	; 0x2dc <main+0x18>
	int digitalval;
	 float analogval;
	 float error;
	for(int i=0;i<10;i++)
 2e4:	19 82       	std	Y+1, r1	; 0x01
 2e6:	1a 82       	std	Y+2, r1	; 0x02
 2e8:	49 c0       	rjmp	.+146    	; 0x37c <main+0xb8>
	{
    digitalval= adc(a[i],14);
 2ea:	89 81       	ldd	r24, Y+1	; 0x01
 2ec:	9a 81       	ldd	r25, Y+2	; 0x02
 2ee:	88 0f       	add	r24, r24
 2f0:	99 1f       	adc	r25, r25
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	9e 01       	movw	r18, r28
 2f8:	2f 5f       	subi	r18, 0xFF	; 255
 2fa:	3f 4f       	sbci	r19, 0xFF	; 255
 2fc:	82 0f       	add	r24, r18
 2fe:	93 1f       	adc	r25, r19
 300:	0c 96       	adiw	r24, 0x0c	; 12
 302:	fc 01       	movw	r30, r24
 304:	80 81       	ld	r24, Z
 306:	91 81       	ldd	r25, Z+1	; 0x01
 308:	a2 81       	ldd	r26, Z+2	; 0x02
 30a:	b3 81       	ldd	r27, Z+3	; 0x03
 30c:	4e e0       	ldi	r20, 0x0E	; 14
 30e:	50 e0       	ldi	r21, 0x00	; 0
 310:	bc 01       	movw	r22, r24
 312:	cd 01       	movw	r24, r26
 314:	0e 94 5f 00 	call	0xbe	; 0xbe <adc>
 318:	8b 83       	std	Y+3, r24	; 0x03
 31a:	9c 83       	std	Y+4, r25	; 0x04
	analogval= dac(digitalval,14);
 31c:	8b 81       	ldd	r24, Y+3	; 0x03
 31e:	9c 81       	ldd	r25, Y+4	; 0x04
 320:	6e e0       	ldi	r22, 0x0E	; 14
 322:	70 e0       	ldi	r23, 0x00	; 0
 324:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <dac>
 328:	dc 01       	movw	r26, r24
 32a:	cb 01       	movw	r24, r22
 32c:	8d 83       	std	Y+5, r24	; 0x05
 32e:	9e 83       	std	Y+6, r25	; 0x06
 330:	af 83       	std	Y+7, r26	; 0x07
 332:	b8 87       	std	Y+8, r27	; 0x08
	error= analogval-a[i];
 334:	89 81       	ldd	r24, Y+1	; 0x01
 336:	9a 81       	ldd	r25, Y+2	; 0x02
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	9e 01       	movw	r18, r28
 342:	2f 5f       	subi	r18, 0xFF	; 255
 344:	3f 4f       	sbci	r19, 0xFF	; 255
 346:	82 0f       	add	r24, r18
 348:	93 1f       	adc	r25, r19
 34a:	0c 96       	adiw	r24, 0x0c	; 12
 34c:	fc 01       	movw	r30, r24
 34e:	80 81       	ld	r24, Z
 350:	91 81       	ldd	r25, Z+1	; 0x01
 352:	a2 81       	ldd	r26, Z+2	; 0x02
 354:	b3 81       	ldd	r27, Z+3	; 0x03
 356:	9c 01       	movw	r18, r24
 358:	ad 01       	movw	r20, r26
 35a:	6d 81       	ldd	r22, Y+5	; 0x05
 35c:	7e 81       	ldd	r23, Y+6	; 0x06
 35e:	8f 81       	ldd	r24, Y+7	; 0x07
 360:	98 85       	ldd	r25, Y+8	; 0x08
 362:	0e 94 cb 01 	call	0x396	; 0x396 <__subsf3>
 366:	dc 01       	movw	r26, r24
 368:	cb 01       	movw	r24, r22
 36a:	89 87       	std	Y+9, r24	; 0x09
 36c:	9a 87       	std	Y+10, r25	; 0x0a
 36e:	ab 87       	std	Y+11, r26	; 0x0b
 370:	bc 87       	std	Y+12, r27	; 0x0c
{
	float a[10]={0.6,0.8,1.2,1.5,1.8,1.9,2.7,3.1,3.22,3.3};
	int digitalval;
	 float analogval;
	 float error;
	for(int i=0;i<10;i++)
 372:	89 81       	ldd	r24, Y+1	; 0x01
 374:	9a 81       	ldd	r25, Y+2	; 0x02
 376:	01 96       	adiw	r24, 0x01	; 1
 378:	89 83       	std	Y+1, r24	; 0x01
 37a:	9a 83       	std	Y+2, r25	; 0x02
 37c:	89 81       	ldd	r24, Y+1	; 0x01
 37e:	9a 81       	ldd	r25, Y+2	; 0x02
 380:	0a 97       	sbiw	r24, 0x0a	; 10
 382:	0c f4       	brge	.+2      	; 0x386 <main+0xc2>
 384:	b2 cf       	rjmp	.-156    	; 0x2ea <main+0x26>
	{
    digitalval= adc(a[i],14);
	analogval= dac(digitalval,14);
	error= analogval-a[i];
	}
	return 0;
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	90 e0       	ldi	r25, 0x00	; 0
}
 38a:	e4 96       	adiw	r28, 0x34	; 52
 38c:	cd bf       	out	0x3d, r28	; 61
 38e:	de bf       	out	0x3e, r29	; 62
 390:	df 91       	pop	r29
 392:	cf 91       	pop	r28
 394:	08 95       	ret

00000396 <__subsf3>:
 396:	50 58       	subi	r21, 0x80	; 128

00000398 <__addsf3>:
 398:	bb 27       	eor	r27, r27
 39a:	aa 27       	eor	r26, r26
 39c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__addsf3x>
 3a0:	0c 94 34 03 	jmp	0x668	; 0x668 <__fp_round>
 3a4:	0e 94 26 03 	call	0x64c	; 0x64c <__fp_pscA>
 3a8:	38 f0       	brcs	.+14     	; 0x3b8 <__addsf3+0x20>
 3aa:	0e 94 2d 03 	call	0x65a	; 0x65a <__fp_pscB>
 3ae:	20 f0       	brcs	.+8      	; 0x3b8 <__addsf3+0x20>
 3b0:	39 f4       	brne	.+14     	; 0x3c0 <__addsf3+0x28>
 3b2:	9f 3f       	cpi	r25, 0xFF	; 255
 3b4:	19 f4       	brne	.+6      	; 0x3bc <__addsf3+0x24>
 3b6:	26 f4       	brtc	.+8      	; 0x3c0 <__addsf3+0x28>
 3b8:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_nan>
 3bc:	0e f4       	brtc	.+2      	; 0x3c0 <__addsf3+0x28>
 3be:	e0 95       	com	r30
 3c0:	e7 fb       	bst	r30, 7
 3c2:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_inf>

000003c6 <__addsf3x>:
 3c6:	e9 2f       	mov	r30, r25
 3c8:	0e 94 45 03 	call	0x68a	; 0x68a <__fp_split3>
 3cc:	58 f3       	brcs	.-42     	; 0x3a4 <__addsf3+0xc>
 3ce:	ba 17       	cp	r27, r26
 3d0:	62 07       	cpc	r22, r18
 3d2:	73 07       	cpc	r23, r19
 3d4:	84 07       	cpc	r24, r20
 3d6:	95 07       	cpc	r25, r21
 3d8:	20 f0       	brcs	.+8      	; 0x3e2 <__addsf3x+0x1c>
 3da:	79 f4       	brne	.+30     	; 0x3fa <__addsf3x+0x34>
 3dc:	a6 f5       	brtc	.+104    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3de:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_zero>
 3e2:	0e f4       	brtc	.+2      	; 0x3e6 <__addsf3x+0x20>
 3e4:	e0 95       	com	r30
 3e6:	0b 2e       	mov	r0, r27
 3e8:	ba 2f       	mov	r27, r26
 3ea:	a0 2d       	mov	r26, r0
 3ec:	0b 01       	movw	r0, r22
 3ee:	b9 01       	movw	r22, r18
 3f0:	90 01       	movw	r18, r0
 3f2:	0c 01       	movw	r0, r24
 3f4:	ca 01       	movw	r24, r20
 3f6:	a0 01       	movw	r20, r0
 3f8:	11 24       	eor	r1, r1
 3fa:	ff 27       	eor	r31, r31
 3fc:	59 1b       	sub	r21, r25
 3fe:	99 f0       	breq	.+38     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 400:	59 3f       	cpi	r21, 0xF9	; 249
 402:	50 f4       	brcc	.+20     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 404:	50 3e       	cpi	r21, 0xE0	; 224
 406:	68 f1       	brcs	.+90     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 408:	1a 16       	cp	r1, r26
 40a:	f0 40       	sbci	r31, 0x00	; 0
 40c:	a2 2f       	mov	r26, r18
 40e:	23 2f       	mov	r18, r19
 410:	34 2f       	mov	r19, r20
 412:	44 27       	eor	r20, r20
 414:	58 5f       	subi	r21, 0xF8	; 248
 416:	f3 cf       	rjmp	.-26     	; 0x3fe <__addsf3x+0x38>
 418:	46 95       	lsr	r20
 41a:	37 95       	ror	r19
 41c:	27 95       	ror	r18
 41e:	a7 95       	ror	r26
 420:	f0 40       	sbci	r31, 0x00	; 0
 422:	53 95       	inc	r21
 424:	c9 f7       	brne	.-14     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 426:	7e f4       	brtc	.+30     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 428:	1f 16       	cp	r1, r31
 42a:	ba 0b       	sbc	r27, r26
 42c:	62 0b       	sbc	r22, r18
 42e:	73 0b       	sbc	r23, r19
 430:	84 0b       	sbc	r24, r20
 432:	ba f0       	brmi	.+46     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 434:	91 50       	subi	r25, 0x01	; 1
 436:	a1 f0       	breq	.+40     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 438:	ff 0f       	add	r31, r31
 43a:	bb 1f       	adc	r27, r27
 43c:	66 1f       	adc	r22, r22
 43e:	77 1f       	adc	r23, r23
 440:	88 1f       	adc	r24, r24
 442:	c2 f7       	brpl	.-16     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 444:	0e c0       	rjmp	.+28     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 446:	ba 0f       	add	r27, r26
 448:	62 1f       	adc	r22, r18
 44a:	73 1f       	adc	r23, r19
 44c:	84 1f       	adc	r24, r20
 44e:	48 f4       	brcc	.+18     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 450:	87 95       	ror	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b7 95       	ror	r27
 458:	f7 95       	ror	r31
 45a:	9e 3f       	cpi	r25, 0xFE	; 254
 45c:	08 f0       	brcs	.+2      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 45e:	b0 cf       	rjmp	.-160    	; 0x3c0 <__addsf3+0x28>
 460:	93 95       	inc	r25
 462:	88 0f       	add	r24, r24
 464:	08 f0       	brcs	.+2      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 466:	99 27       	eor	r25, r25
 468:	ee 0f       	add	r30, r30
 46a:	97 95       	ror	r25
 46c:	87 95       	ror	r24
 46e:	08 95       	ret

00000470 <__divsf3>:
 470:	0e 94 4c 02 	call	0x498	; 0x498 <__divsf3x>
 474:	0c 94 34 03 	jmp	0x668	; 0x668 <__fp_round>
 478:	0e 94 2d 03 	call	0x65a	; 0x65a <__fp_pscB>
 47c:	58 f0       	brcs	.+22     	; 0x494 <__divsf3+0x24>
 47e:	0e 94 26 03 	call	0x64c	; 0x64c <__fp_pscA>
 482:	40 f0       	brcs	.+16     	; 0x494 <__divsf3+0x24>
 484:	29 f4       	brne	.+10     	; 0x490 <__divsf3+0x20>
 486:	5f 3f       	cpi	r21, 0xFF	; 255
 488:	29 f0       	breq	.+10     	; 0x494 <__divsf3+0x24>
 48a:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_inf>
 48e:	51 11       	cpse	r21, r1
 490:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_szero>
 494:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_nan>

00000498 <__divsf3x>:
 498:	0e 94 45 03 	call	0x68a	; 0x68a <__fp_split3>
 49c:	68 f3       	brcs	.-38     	; 0x478 <__divsf3+0x8>

0000049e <__divsf3_pse>:
 49e:	99 23       	and	r25, r25
 4a0:	b1 f3       	breq	.-20     	; 0x48e <__divsf3+0x1e>
 4a2:	55 23       	and	r21, r21
 4a4:	91 f3       	breq	.-28     	; 0x48a <__divsf3+0x1a>
 4a6:	95 1b       	sub	r25, r21
 4a8:	55 0b       	sbc	r21, r21
 4aa:	bb 27       	eor	r27, r27
 4ac:	aa 27       	eor	r26, r26
 4ae:	62 17       	cp	r22, r18
 4b0:	73 07       	cpc	r23, r19
 4b2:	84 07       	cpc	r24, r20
 4b4:	38 f0       	brcs	.+14     	; 0x4c4 <__divsf3_pse+0x26>
 4b6:	9f 5f       	subi	r25, 0xFF	; 255
 4b8:	5f 4f       	sbci	r21, 0xFF	; 255
 4ba:	22 0f       	add	r18, r18
 4bc:	33 1f       	adc	r19, r19
 4be:	44 1f       	adc	r20, r20
 4c0:	aa 1f       	adc	r26, r26
 4c2:	a9 f3       	breq	.-22     	; 0x4ae <__divsf3_pse+0x10>
 4c4:	35 d0       	rcall	.+106    	; 0x530 <__divsf3_pse+0x92>
 4c6:	0e 2e       	mov	r0, r30
 4c8:	3a f0       	brmi	.+14     	; 0x4d8 <__divsf3_pse+0x3a>
 4ca:	e0 e8       	ldi	r30, 0x80	; 128
 4cc:	32 d0       	rcall	.+100    	; 0x532 <__divsf3_pse+0x94>
 4ce:	91 50       	subi	r25, 0x01	; 1
 4d0:	50 40       	sbci	r21, 0x00	; 0
 4d2:	e6 95       	lsr	r30
 4d4:	00 1c       	adc	r0, r0
 4d6:	ca f7       	brpl	.-14     	; 0x4ca <__divsf3_pse+0x2c>
 4d8:	2b d0       	rcall	.+86     	; 0x530 <__divsf3_pse+0x92>
 4da:	fe 2f       	mov	r31, r30
 4dc:	29 d0       	rcall	.+82     	; 0x530 <__divsf3_pse+0x92>
 4de:	66 0f       	add	r22, r22
 4e0:	77 1f       	adc	r23, r23
 4e2:	88 1f       	adc	r24, r24
 4e4:	bb 1f       	adc	r27, r27
 4e6:	26 17       	cp	r18, r22
 4e8:	37 07       	cpc	r19, r23
 4ea:	48 07       	cpc	r20, r24
 4ec:	ab 07       	cpc	r26, r27
 4ee:	b0 e8       	ldi	r27, 0x80	; 128
 4f0:	09 f0       	breq	.+2      	; 0x4f4 <__divsf3_pse+0x56>
 4f2:	bb 0b       	sbc	r27, r27
 4f4:	80 2d       	mov	r24, r0
 4f6:	bf 01       	movw	r22, r30
 4f8:	ff 27       	eor	r31, r31
 4fa:	93 58       	subi	r25, 0x83	; 131
 4fc:	5f 4f       	sbci	r21, 0xFF	; 255
 4fe:	3a f0       	brmi	.+14     	; 0x50e <__divsf3_pse+0x70>
 500:	9e 3f       	cpi	r25, 0xFE	; 254
 502:	51 05       	cpc	r21, r1
 504:	78 f0       	brcs	.+30     	; 0x524 <__divsf3_pse+0x86>
 506:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_inf>
 50a:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_szero>
 50e:	5f 3f       	cpi	r21, 0xFF	; 255
 510:	e4 f3       	brlt	.-8      	; 0x50a <__divsf3_pse+0x6c>
 512:	98 3e       	cpi	r25, 0xE8	; 232
 514:	d4 f3       	brlt	.-12     	; 0x50a <__divsf3_pse+0x6c>
 516:	86 95       	lsr	r24
 518:	77 95       	ror	r23
 51a:	67 95       	ror	r22
 51c:	b7 95       	ror	r27
 51e:	f7 95       	ror	r31
 520:	9f 5f       	subi	r25, 0xFF	; 255
 522:	c9 f7       	brne	.-14     	; 0x516 <__divsf3_pse+0x78>
 524:	88 0f       	add	r24, r24
 526:	91 1d       	adc	r25, r1
 528:	96 95       	lsr	r25
 52a:	87 95       	ror	r24
 52c:	97 f9       	bld	r25, 7
 52e:	08 95       	ret
 530:	e1 e0       	ldi	r30, 0x01	; 1
 532:	66 0f       	add	r22, r22
 534:	77 1f       	adc	r23, r23
 536:	88 1f       	adc	r24, r24
 538:	bb 1f       	adc	r27, r27
 53a:	62 17       	cp	r22, r18
 53c:	73 07       	cpc	r23, r19
 53e:	84 07       	cpc	r24, r20
 540:	ba 07       	cpc	r27, r26
 542:	20 f0       	brcs	.+8      	; 0x54c <__divsf3_pse+0xae>
 544:	62 1b       	sub	r22, r18
 546:	73 0b       	sbc	r23, r19
 548:	84 0b       	sbc	r24, r20
 54a:	ba 0b       	sbc	r27, r26
 54c:	ee 1f       	adc	r30, r30
 54e:	88 f7       	brcc	.-30     	; 0x532 <__divsf3_pse+0x94>
 550:	e0 95       	com	r30
 552:	08 95       	ret

00000554 <__fixsfsi>:
 554:	0e 94 b1 02 	call	0x562	; 0x562 <__fixunssfsi>
 558:	68 94       	set
 55a:	b1 11       	cpse	r27, r1
 55c:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_szero>
 560:	08 95       	ret

00000562 <__fixunssfsi>:
 562:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_splitA>
 566:	88 f0       	brcs	.+34     	; 0x58a <__fixunssfsi+0x28>
 568:	9f 57       	subi	r25, 0x7F	; 127
 56a:	98 f0       	brcs	.+38     	; 0x592 <__fixunssfsi+0x30>
 56c:	b9 2f       	mov	r27, r25
 56e:	99 27       	eor	r25, r25
 570:	b7 51       	subi	r27, 0x17	; 23
 572:	b0 f0       	brcs	.+44     	; 0x5a0 <__fixunssfsi+0x3e>
 574:	e1 f0       	breq	.+56     	; 0x5ae <__fixunssfsi+0x4c>
 576:	66 0f       	add	r22, r22
 578:	77 1f       	adc	r23, r23
 57a:	88 1f       	adc	r24, r24
 57c:	99 1f       	adc	r25, r25
 57e:	1a f0       	brmi	.+6      	; 0x586 <__fixunssfsi+0x24>
 580:	ba 95       	dec	r27
 582:	c9 f7       	brne	.-14     	; 0x576 <__fixunssfsi+0x14>
 584:	14 c0       	rjmp	.+40     	; 0x5ae <__fixunssfsi+0x4c>
 586:	b1 30       	cpi	r27, 0x01	; 1
 588:	91 f0       	breq	.+36     	; 0x5ae <__fixunssfsi+0x4c>
 58a:	0e 94 67 03 	call	0x6ce	; 0x6ce <__fp_zero>
 58e:	b1 e0       	ldi	r27, 0x01	; 1
 590:	08 95       	ret
 592:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_zero>
 596:	67 2f       	mov	r22, r23
 598:	78 2f       	mov	r23, r24
 59a:	88 27       	eor	r24, r24
 59c:	b8 5f       	subi	r27, 0xF8	; 248
 59e:	39 f0       	breq	.+14     	; 0x5ae <__fixunssfsi+0x4c>
 5a0:	b9 3f       	cpi	r27, 0xF9	; 249
 5a2:	cc f3       	brlt	.-14     	; 0x596 <__fixunssfsi+0x34>
 5a4:	86 95       	lsr	r24
 5a6:	77 95       	ror	r23
 5a8:	67 95       	ror	r22
 5aa:	b3 95       	inc	r27
 5ac:	d9 f7       	brne	.-10     	; 0x5a4 <__fixunssfsi+0x42>
 5ae:	3e f4       	brtc	.+14     	; 0x5be <__fixunssfsi+0x5c>
 5b0:	90 95       	com	r25
 5b2:	80 95       	com	r24
 5b4:	70 95       	com	r23
 5b6:	61 95       	neg	r22
 5b8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ba:	8f 4f       	sbci	r24, 0xFF	; 255
 5bc:	9f 4f       	sbci	r25, 0xFF	; 255
 5be:	08 95       	ret

000005c0 <__floatunsisf>:
 5c0:	e8 94       	clt
 5c2:	09 c0       	rjmp	.+18     	; 0x5d6 <__floatsisf+0x12>

000005c4 <__floatsisf>:
 5c4:	97 fb       	bst	r25, 7
 5c6:	3e f4       	brtc	.+14     	; 0x5d6 <__floatsisf+0x12>
 5c8:	90 95       	com	r25
 5ca:	80 95       	com	r24
 5cc:	70 95       	com	r23
 5ce:	61 95       	neg	r22
 5d0:	7f 4f       	sbci	r23, 0xFF	; 255
 5d2:	8f 4f       	sbci	r24, 0xFF	; 255
 5d4:	9f 4f       	sbci	r25, 0xFF	; 255
 5d6:	99 23       	and	r25, r25
 5d8:	a9 f0       	breq	.+42     	; 0x604 <__floatsisf+0x40>
 5da:	f9 2f       	mov	r31, r25
 5dc:	96 e9       	ldi	r25, 0x96	; 150
 5de:	bb 27       	eor	r27, r27
 5e0:	93 95       	inc	r25
 5e2:	f6 95       	lsr	r31
 5e4:	87 95       	ror	r24
 5e6:	77 95       	ror	r23
 5e8:	67 95       	ror	r22
 5ea:	b7 95       	ror	r27
 5ec:	f1 11       	cpse	r31, r1
 5ee:	f8 cf       	rjmp	.-16     	; 0x5e0 <__floatsisf+0x1c>
 5f0:	fa f4       	brpl	.+62     	; 0x630 <__floatsisf+0x6c>
 5f2:	bb 0f       	add	r27, r27
 5f4:	11 f4       	brne	.+4      	; 0x5fa <__floatsisf+0x36>
 5f6:	60 ff       	sbrs	r22, 0
 5f8:	1b c0       	rjmp	.+54     	; 0x630 <__floatsisf+0x6c>
 5fa:	6f 5f       	subi	r22, 0xFF	; 255
 5fc:	7f 4f       	sbci	r23, 0xFF	; 255
 5fe:	8f 4f       	sbci	r24, 0xFF	; 255
 600:	9f 4f       	sbci	r25, 0xFF	; 255
 602:	16 c0       	rjmp	.+44     	; 0x630 <__floatsisf+0x6c>
 604:	88 23       	and	r24, r24
 606:	11 f0       	breq	.+4      	; 0x60c <__floatsisf+0x48>
 608:	96 e9       	ldi	r25, 0x96	; 150
 60a:	11 c0       	rjmp	.+34     	; 0x62e <__floatsisf+0x6a>
 60c:	77 23       	and	r23, r23
 60e:	21 f0       	breq	.+8      	; 0x618 <__floatsisf+0x54>
 610:	9e e8       	ldi	r25, 0x8E	; 142
 612:	87 2f       	mov	r24, r23
 614:	76 2f       	mov	r23, r22
 616:	05 c0       	rjmp	.+10     	; 0x622 <__floatsisf+0x5e>
 618:	66 23       	and	r22, r22
 61a:	71 f0       	breq	.+28     	; 0x638 <__floatsisf+0x74>
 61c:	96 e8       	ldi	r25, 0x86	; 134
 61e:	86 2f       	mov	r24, r22
 620:	70 e0       	ldi	r23, 0x00	; 0
 622:	60 e0       	ldi	r22, 0x00	; 0
 624:	2a f0       	brmi	.+10     	; 0x630 <__floatsisf+0x6c>
 626:	9a 95       	dec	r25
 628:	66 0f       	add	r22, r22
 62a:	77 1f       	adc	r23, r23
 62c:	88 1f       	adc	r24, r24
 62e:	da f7       	brpl	.-10     	; 0x626 <__floatsisf+0x62>
 630:	88 0f       	add	r24, r24
 632:	96 95       	lsr	r25
 634:	87 95       	ror	r24
 636:	97 f9       	bld	r25, 7
 638:	08 95       	ret

0000063a <__fp_inf>:
 63a:	97 f9       	bld	r25, 7
 63c:	9f 67       	ori	r25, 0x7F	; 127
 63e:	80 e8       	ldi	r24, 0x80	; 128
 640:	70 e0       	ldi	r23, 0x00	; 0
 642:	60 e0       	ldi	r22, 0x00	; 0
 644:	08 95       	ret

00000646 <__fp_nan>:
 646:	9f ef       	ldi	r25, 0xFF	; 255
 648:	80 ec       	ldi	r24, 0xC0	; 192
 64a:	08 95       	ret

0000064c <__fp_pscA>:
 64c:	00 24       	eor	r0, r0
 64e:	0a 94       	dec	r0
 650:	16 16       	cp	r1, r22
 652:	17 06       	cpc	r1, r23
 654:	18 06       	cpc	r1, r24
 656:	09 06       	cpc	r0, r25
 658:	08 95       	ret

0000065a <__fp_pscB>:
 65a:	00 24       	eor	r0, r0
 65c:	0a 94       	dec	r0
 65e:	12 16       	cp	r1, r18
 660:	13 06       	cpc	r1, r19
 662:	14 06       	cpc	r1, r20
 664:	05 06       	cpc	r0, r21
 666:	08 95       	ret

00000668 <__fp_round>:
 668:	09 2e       	mov	r0, r25
 66a:	03 94       	inc	r0
 66c:	00 0c       	add	r0, r0
 66e:	11 f4       	brne	.+4      	; 0x674 <__fp_round+0xc>
 670:	88 23       	and	r24, r24
 672:	52 f0       	brmi	.+20     	; 0x688 <__fp_round+0x20>
 674:	bb 0f       	add	r27, r27
 676:	40 f4       	brcc	.+16     	; 0x688 <__fp_round+0x20>
 678:	bf 2b       	or	r27, r31
 67a:	11 f4       	brne	.+4      	; 0x680 <__fp_round+0x18>
 67c:	60 ff       	sbrs	r22, 0
 67e:	04 c0       	rjmp	.+8      	; 0x688 <__fp_round+0x20>
 680:	6f 5f       	subi	r22, 0xFF	; 255
 682:	7f 4f       	sbci	r23, 0xFF	; 255
 684:	8f 4f       	sbci	r24, 0xFF	; 255
 686:	9f 4f       	sbci	r25, 0xFF	; 255
 688:	08 95       	ret

0000068a <__fp_split3>:
 68a:	57 fd       	sbrc	r21, 7
 68c:	90 58       	subi	r25, 0x80	; 128
 68e:	44 0f       	add	r20, r20
 690:	55 1f       	adc	r21, r21
 692:	59 f0       	breq	.+22     	; 0x6aa <__fp_splitA+0x10>
 694:	5f 3f       	cpi	r21, 0xFF	; 255
 696:	71 f0       	breq	.+28     	; 0x6b4 <__fp_splitA+0x1a>
 698:	47 95       	ror	r20

0000069a <__fp_splitA>:
 69a:	88 0f       	add	r24, r24
 69c:	97 fb       	bst	r25, 7
 69e:	99 1f       	adc	r25, r25
 6a0:	61 f0       	breq	.+24     	; 0x6ba <__fp_splitA+0x20>
 6a2:	9f 3f       	cpi	r25, 0xFF	; 255
 6a4:	79 f0       	breq	.+30     	; 0x6c4 <__fp_splitA+0x2a>
 6a6:	87 95       	ror	r24
 6a8:	08 95       	ret
 6aa:	12 16       	cp	r1, r18
 6ac:	13 06       	cpc	r1, r19
 6ae:	14 06       	cpc	r1, r20
 6b0:	55 1f       	adc	r21, r21
 6b2:	f2 cf       	rjmp	.-28     	; 0x698 <__fp_split3+0xe>
 6b4:	46 95       	lsr	r20
 6b6:	f1 df       	rcall	.-30     	; 0x69a <__fp_splitA>
 6b8:	08 c0       	rjmp	.+16     	; 0x6ca <__fp_splitA+0x30>
 6ba:	16 16       	cp	r1, r22
 6bc:	17 06       	cpc	r1, r23
 6be:	18 06       	cpc	r1, r24
 6c0:	99 1f       	adc	r25, r25
 6c2:	f1 cf       	rjmp	.-30     	; 0x6a6 <__fp_splitA+0xc>
 6c4:	86 95       	lsr	r24
 6c6:	71 05       	cpc	r23, r1
 6c8:	61 05       	cpc	r22, r1
 6ca:	08 94       	sec
 6cc:	08 95       	ret

000006ce <__fp_zero>:
 6ce:	e8 94       	clt

000006d0 <__fp_szero>:
 6d0:	bb 27       	eor	r27, r27
 6d2:	66 27       	eor	r22, r22
 6d4:	77 27       	eor	r23, r23
 6d6:	cb 01       	movw	r24, r22
 6d8:	97 f9       	bld	r25, 7
 6da:	08 95       	ret

000006dc <__mulsf3>:
 6dc:	0e 94 81 03 	call	0x702	; 0x702 <__mulsf3x>
 6e0:	0c 94 34 03 	jmp	0x668	; 0x668 <__fp_round>
 6e4:	0e 94 26 03 	call	0x64c	; 0x64c <__fp_pscA>
 6e8:	38 f0       	brcs	.+14     	; 0x6f8 <__mulsf3+0x1c>
 6ea:	0e 94 2d 03 	call	0x65a	; 0x65a <__fp_pscB>
 6ee:	20 f0       	brcs	.+8      	; 0x6f8 <__mulsf3+0x1c>
 6f0:	95 23       	and	r25, r21
 6f2:	11 f0       	breq	.+4      	; 0x6f8 <__mulsf3+0x1c>
 6f4:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_inf>
 6f8:	0c 94 23 03 	jmp	0x646	; 0x646 <__fp_nan>
 6fc:	11 24       	eor	r1, r1
 6fe:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_szero>

00000702 <__mulsf3x>:
 702:	0e 94 45 03 	call	0x68a	; 0x68a <__fp_split3>
 706:	70 f3       	brcs	.-36     	; 0x6e4 <__mulsf3+0x8>

00000708 <__mulsf3_pse>:
 708:	95 9f       	mul	r25, r21
 70a:	c1 f3       	breq	.-16     	; 0x6fc <__mulsf3+0x20>
 70c:	95 0f       	add	r25, r21
 70e:	50 e0       	ldi	r21, 0x00	; 0
 710:	55 1f       	adc	r21, r21
 712:	62 9f       	mul	r22, r18
 714:	f0 01       	movw	r30, r0
 716:	72 9f       	mul	r23, r18
 718:	bb 27       	eor	r27, r27
 71a:	f0 0d       	add	r31, r0
 71c:	b1 1d       	adc	r27, r1
 71e:	63 9f       	mul	r22, r19
 720:	aa 27       	eor	r26, r26
 722:	f0 0d       	add	r31, r0
 724:	b1 1d       	adc	r27, r1
 726:	aa 1f       	adc	r26, r26
 728:	64 9f       	mul	r22, r20
 72a:	66 27       	eor	r22, r22
 72c:	b0 0d       	add	r27, r0
 72e:	a1 1d       	adc	r26, r1
 730:	66 1f       	adc	r22, r22
 732:	82 9f       	mul	r24, r18
 734:	22 27       	eor	r18, r18
 736:	b0 0d       	add	r27, r0
 738:	a1 1d       	adc	r26, r1
 73a:	62 1f       	adc	r22, r18
 73c:	73 9f       	mul	r23, r19
 73e:	b0 0d       	add	r27, r0
 740:	a1 1d       	adc	r26, r1
 742:	62 1f       	adc	r22, r18
 744:	83 9f       	mul	r24, r19
 746:	a0 0d       	add	r26, r0
 748:	61 1d       	adc	r22, r1
 74a:	22 1f       	adc	r18, r18
 74c:	74 9f       	mul	r23, r20
 74e:	33 27       	eor	r19, r19
 750:	a0 0d       	add	r26, r0
 752:	61 1d       	adc	r22, r1
 754:	23 1f       	adc	r18, r19
 756:	84 9f       	mul	r24, r20
 758:	60 0d       	add	r22, r0
 75a:	21 1d       	adc	r18, r1
 75c:	82 2f       	mov	r24, r18
 75e:	76 2f       	mov	r23, r22
 760:	6a 2f       	mov	r22, r26
 762:	11 24       	eor	r1, r1
 764:	9f 57       	subi	r25, 0x7F	; 127
 766:	50 40       	sbci	r21, 0x00	; 0
 768:	9a f0       	brmi	.+38     	; 0x790 <__mulsf3_pse+0x88>
 76a:	f1 f0       	breq	.+60     	; 0x7a8 <__mulsf3_pse+0xa0>
 76c:	88 23       	and	r24, r24
 76e:	4a f0       	brmi	.+18     	; 0x782 <__mulsf3_pse+0x7a>
 770:	ee 0f       	add	r30, r30
 772:	ff 1f       	adc	r31, r31
 774:	bb 1f       	adc	r27, r27
 776:	66 1f       	adc	r22, r22
 778:	77 1f       	adc	r23, r23
 77a:	88 1f       	adc	r24, r24
 77c:	91 50       	subi	r25, 0x01	; 1
 77e:	50 40       	sbci	r21, 0x00	; 0
 780:	a9 f7       	brne	.-22     	; 0x76c <__mulsf3_pse+0x64>
 782:	9e 3f       	cpi	r25, 0xFE	; 254
 784:	51 05       	cpc	r21, r1
 786:	80 f0       	brcs	.+32     	; 0x7a8 <__mulsf3_pse+0xa0>
 788:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_inf>
 78c:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_szero>
 790:	5f 3f       	cpi	r21, 0xFF	; 255
 792:	e4 f3       	brlt	.-8      	; 0x78c <__mulsf3_pse+0x84>
 794:	98 3e       	cpi	r25, 0xE8	; 232
 796:	d4 f3       	brlt	.-12     	; 0x78c <__mulsf3_pse+0x84>
 798:	86 95       	lsr	r24
 79a:	77 95       	ror	r23
 79c:	67 95       	ror	r22
 79e:	b7 95       	ror	r27
 7a0:	f7 95       	ror	r31
 7a2:	e7 95       	ror	r30
 7a4:	9f 5f       	subi	r25, 0xFF	; 255
 7a6:	c1 f7       	brne	.-16     	; 0x798 <__mulsf3_pse+0x90>
 7a8:	fe 2b       	or	r31, r30
 7aa:	88 0f       	add	r24, r24
 7ac:	91 1d       	adc	r25, r1
 7ae:	96 95       	lsr	r25
 7b0:	87 95       	ror	r24
 7b2:	97 f9       	bld	r25, 7
 7b4:	08 95       	ret

000007b6 <__mulsi3>:
 7b6:	db 01       	movw	r26, r22
 7b8:	8f 93       	push	r24
 7ba:	9f 93       	push	r25
 7bc:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__muluhisi3>
 7c0:	bf 91       	pop	r27
 7c2:	af 91       	pop	r26
 7c4:	a2 9f       	mul	r26, r18
 7c6:	80 0d       	add	r24, r0
 7c8:	91 1d       	adc	r25, r1
 7ca:	a3 9f       	mul	r26, r19
 7cc:	90 0d       	add	r25, r0
 7ce:	b2 9f       	mul	r27, r18
 7d0:	90 0d       	add	r25, r0
 7d2:	11 24       	eor	r1, r1
 7d4:	08 95       	ret

000007d6 <__muluhisi3>:
 7d6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__umulhisi3>
 7da:	a5 9f       	mul	r26, r21
 7dc:	90 0d       	add	r25, r0
 7de:	b4 9f       	mul	r27, r20
 7e0:	90 0d       	add	r25, r0
 7e2:	a4 9f       	mul	r26, r20
 7e4:	80 0d       	add	r24, r0
 7e6:	91 1d       	adc	r25, r1
 7e8:	11 24       	eor	r1, r1
 7ea:	08 95       	ret

000007ec <__umulhisi3>:
 7ec:	a2 9f       	mul	r26, r18
 7ee:	b0 01       	movw	r22, r0
 7f0:	b3 9f       	mul	r27, r19
 7f2:	c0 01       	movw	r24, r0
 7f4:	a3 9f       	mul	r26, r19
 7f6:	70 0d       	add	r23, r0
 7f8:	81 1d       	adc	r24, r1
 7fa:	11 24       	eor	r1, r1
 7fc:	91 1d       	adc	r25, r1
 7fe:	b2 9f       	mul	r27, r18
 800:	70 0d       	add	r23, r0
 802:	81 1d       	adc	r24, r1
 804:	11 24       	eor	r1, r1
 806:	91 1d       	adc	r25, r1
 808:	08 95       	ret

0000080a <_exit>:
 80a:	f8 94       	cli

0000080c <__stop_program>:
 80c:	ff cf       	rjmp	.-2      	; 0x80c <__stop_program>
